{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Screens\\\\loginScreen.js\";\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Icon } from 'react-native-elements';\nimport * as Google from 'expo-google-app-auth';\nimport LoginScreenStyles from \"../Styles/loginSreenStyles\";\nimport style from \"../Styles/Styles\";\nimport MainPage from \"../Components/mainPage\";\nimport ApiMethods from \"../utilities/apiMethods\";\nimport { AppLoading } from 'expo';\nimport LoadFonts from \"../assets/fonts\";\n\nvar backgroundImage = require(\"../Styles/images/turquise indigo gradient.png\");\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  function LoginScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\",\n      email: \"\",\n      userID: \"\",\n      accessToken: \"\",\n      showSpinner: true,\n      currentMonthID: \"\",\n      currentMonth: \"\",\n      currentYear: \"\",\n      spinnerOpacity: 0,\n      fontsLoaded: false\n    };\n\n    _this.signIn = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                spinnerOpacity: 1\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"446220388364-jffs659t4t98fuur4srsstggq04mgd52.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 4:\n              result = _context.sent;\n\n              if (result.type === \"success\") {\n                ApiMethods.getUserByEmail(result.user.email).then(function (data) {\n                  if (data.data[0] === undefined) {\n                    ApiMethods.addUser(result.user.email, result.user.photoUrl, result.user.familyName, result.user.givenName).then(function (data) {\n                      return console.log(data);\n                    }).catch(function (err) {\n                      return console.log(err);\n                    });\n\n                    _this.setState({\n                      signedIn: true,\n                      name: result.user.name,\n                      photoUrl: result.user.photoUrl,\n                      email: result.user.email,\n                      accessToken: result.accessToken\n                    }, function () {\n                      ApiMethods.getCurrentMonth().then(function (month) {\n                        _this.setState({\n                          currentMonthID: month.data[0]._id,\n                          currentMonth: month.data[0].month,\n                          currentyear: month.data[0].year,\n                          spinnerOpacity: 0\n                        });\n                      }).catch(function (err) {\n                        return console.log(err);\n                      });\n                    });\n                  } else {\n                    _this.setState({\n                      signedIn: true,\n                      name: result.user.name,\n                      photoUrl: result.user.photoUrl,\n                      email: result.user.email,\n                      userID: data.data[0]._id,\n                      accessToken: result.accessToken\n                    }, function () {\n                      ApiMethods.getCurrentMonth().then(function (month) {\n                        _this.setState({\n                          currentMonthID: month.data[0]._id,\n                          currentMonth: month.data[0].month,\n                          currentYear: month.data[0].year,\n                          spinnerOpacity: 0\n                        }, function () {\n                          _this.props.navigation.navigate('Budget', {\n                            email: _this.state.email,\n                            userID: _this.state.userID,\n                            currentMonth: _this.state.currentMonth,\n                            currentYear: _this.state.currentYear,\n                            currentMonthID: _this.state.currentMonthID,\n                            photoURL: _this.state.photoUrl,\n                            signOut: _this.signOut\n                          });\n                        });\n                      }).catch(function (err) {\n                        return console.log(err);\n                      });\n                    });\n                  }\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n              } else {\n                console.log(\"cancelled\");\n\n                _this.setState({\n                  showSpinner: false\n                });\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"error\", _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    };\n\n    _this.signOut = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Google.logOutAsync({\n                accessToken: _this.state.accessToken,\n                androidClientId: \"446220388364-jffs659t4t98fuur4srsstggq04mgd52.apps.googleusercontent.com\"\n              }).then(function (data) {\n                _this.setState({\n                  signedIn: false,\n                  email: \"\",\n                  name: \"\",\n                  photoUrl: \"\",\n                  accessToken: \"\"\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(_this.props.navigation.navigate('Login'));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      LoadFonts().then(function (fonts) {\n        _this2.setState({\n          fontsLoaded: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigation = this.props.navigation;\n\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        });\n      } else {\n        return React.createElement(Container, {\n          style: LoginScreenStyles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, React.createElement(ImageBackground, {\n          source: backgroundImage,\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, React.createElement(View, {\n          style: LoginScreenStyles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#F5F5F5',\n            fontSize: 45,\n            fontFamily: \"Laila-SemiBold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }, \"Hi! I'm Lahri.\"), React.createElement(Text, {\n          style: {\n            color: '#F5F5F5',\n            fontSize: 15,\n            fontFamily: \"Laila-SemiBold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          }\n        }, \"I'll help you make a plan for your money.\"), React.createElement(Text, {\n          style: {\n            color: '#F5F5F5',\n            fontSize: 15,\n            fontFamily: \"Laila-SemiBold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          }\n        }, \"Shall we get to it?\")), React.createElement(View, {\n          style: LoginScreenStyles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          }\n        }, React.createElement(ActivityIndicator, {\n          style: {\n            opacity: this.state.spinnerOpacity\n          },\n          animating: this.state.showSpinner,\n          size: 50,\n          color: \"#40DBCE\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          }\n        })), this.state.signedIn ? React.createElement(Text, {\n          style: {\n            color: '#F5F5F5',\n            fontSize: 18,\n            fontFamily: \"Laila-SemiBold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          }\n        }, \" \", 'Welcome back, ' + this.state.name, \" \") : React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          }\n        })), React.createElement(View, {\n          style: LoginScreenStyles.signIn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          }\n        }, this.state.signedIn ? React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Budget', {\n              email: _this3.state.email,\n              currentMonth: _this3.state.currentMonth,\n              currentYear: _this3.state.currentYear,\n              currentMonthID: _this3.state.currentMonthID,\n              photoURL: _this3.state.photoUrl,\n              signOut: _this3.signOut\n            });\n          },\n          style: style.button2_cta_style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontFamily: \"Laila-SemiBold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          }\n        }, \" Go to main page \"))) : React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this3.signIn();\n          },\n          style: style.button2_light_style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#4A0784',\n            fontFamily: \"Laila-SemiBold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          }\n        }, \" Sign in with Google \"))))));\n      }\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Screens/loginScreen.js"],"names":["React","Component","Container","Header","Content","Card","CardItem","Text","Body","TouchableOpacity","Icon","Google","LoginScreenStyles","style","MainPage","ApiMethods","AppLoading","LoadFonts","backgroundImage","require","LoginScreen","state","signedIn","name","photoUrl","email","userID","accessToken","showSpinner","currentMonthID","currentMonth","currentYear","spinnerOpacity","fontsLoaded","signIn","setState","logInAsync","androidClientId","scopes","result","type","getUserByEmail","user","then","data","undefined","addUser","familyName","givenName","console","log","catch","err","getCurrentMonth","month","_id","currentyear","year","props","navigation","navigate","photoURL","signOut","logOutAsync","fonts","container","width","height","welcome","color","fontSize","fontFamily","opacity","button2_cta_style","button2_light_style"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ActivityIndicator, View, Button, ImageBackground, Alert } from 'react-native';\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Icon } from 'react-native-elements'\nimport * as Google from 'expo-google-app-auth'\nimport LoginScreenStyles from \"../Styles/loginSreenStyles\";\nimport style from \"../Styles/Styles\";\nimport MainPage from '../Components/mainPage';\nimport ApiMethods from '../utilities/apiMethods';\nimport { AppLoading } from 'expo';\nimport LoadFonts from '../assets/fonts';\n\n\nconst backgroundImage = require('../Styles/images/turquise indigo gradient.png');\n\nclass LoginScreen extends Component {\n\n  state = {\n    signedIn: false,\n    name: \"\",\n    photoUrl: \"\",\n    email:\"\",\n    userID: \"\",\n    accessToken: \"\",\n    showSpinner: true,\n    currentMonthID: \"\",\n    currentMonth: \"\",\n    currentYear: \"\",\n    spinnerOpacity: 0, //Because of this bug: https://github.com/facebook/react-native/issues/9023\n    fontsLoaded: false\n  }\n\n  componentDidMount() {\n    LoadFonts().then(fonts => {this.setState({fontsLoaded: true})}).catch(err => console.log(err));\n  }\n\n  signIn = async () => {\n    this.setState({spinnerOpacity: 1})\n    try {\n      const result = await Google.logInAsync({\n        androidClientId: \"446220388364-jffs659t4t98fuur4srsstggq04mgd52.apps.googleusercontent.com\",\n        scopes: [\"profile\", \"email\"]\n      })\n      if (result.type === \"success\") {\n          ApiMethods.getUserByEmail(result.user.email)\n          .then(data => {\n            if (data.data[0] === undefined){\n              ApiMethods.addUser(result.user.email, result.user.photoUrl, result.user.familyName, result.user.givenName)\n              .then(data => console.log(data)).catch(err => console.log(err));\n\n              this.setState({\n                signedIn: true,\n                name: result.user.name,\n                photoUrl: result.user.photoUrl,\n                email: result.user.email,\n                accessToken: result.accessToken\n              }, () => {\n                ApiMethods.getCurrentMonth()\n                      .then(month => {\n                          this.setState({\n                            currentMonthID: month.data[0]._id,\n                            currentMonth: month.data[0].month,\n                            currentyear: month.data[0].year,\n                            spinnerOpacity: 0\n                          });\n                        })\n                      .catch(err => console.log(err));\n              })\n            }else {\n              this.setState({\n                signedIn: true,\n                name: result.user.name,\n                photoUrl: result.user.photoUrl,\n                email: result.user.email, \n                userID: data.data[0]._id,\n                accessToken: result.accessToken\n              }, () => { //callback in setstate to get data for current calendar month and set month data that will be needed when the app is loaded\n                ApiMethods.getCurrentMonth()\n                      .then(month => {\n                          this.setState({\n                            currentMonthID: month.data[0]._id,\n                            currentMonth: month.data[0].month,\n                            currentYear: month.data[0].year,\n                            spinnerOpacity: 0\n                          }, () => { //another callback that then sends the user to the main app after the month data has been recieved and set.\n                            this.props.navigation.navigate('Budget', {email: this.state.email, userID: this.state.userID, currentMonth: this.state.currentMonth, currentYear: this.state.currentYear, currentMonthID: this.state.currentMonthID, photoURL: this.state.photoUrl, signOut: this.signOut})\n                          });\n                        })\n                      .catch(err => console.log(err))\n              })\n            }\n          })\n          .catch(err => console.log(err))\n\n      } else {\n        console.log(\"cancelled\")\n        this.setState({ \n          showSpinner: false\n        })\n      }\n} catch (e) {\n      console.log(\"error\", e)\n    }\n}\n\nsignOut = async () => {\n\n  await Google.logOutAsync({accessToken: this.state.accessToken, androidClientId: \"446220388364-jffs659t4t98fuur4srsstggq04mgd52.apps.googleusercontent.com\"})\n              .then(data => {\n                  this.setState({signedIn: false, email: \"\", name: \"\", photoUrl: \"\", accessToken: \"\"})\n                })\n              .catch(err => console.log(err));\n  \n  await this.props.navigation.navigate('Login');\n\n}\n\n render() {\n\n   const {navigation} = this.props;\n\n   if (!this.state.fontsLoaded) {\n      return <AppLoading />;\n } else {\n      return (\n        <Container style={LoginScreenStyles.container}>\n            <ImageBackground\n              source={backgroundImage}\n              style={{width: '100%', height: '100%'}} >\n            <View style={LoginScreenStyles.welcome}>\n              <Text style={{color: '#F5F5F5', fontSize: 45, fontFamily: \"Laila-SemiBold\"}}>\n                Hi! I'm Lahri.\n              </Text>\n              <Text style={{color: '#F5F5F5', fontSize: 15, fontFamily: \"Laila-SemiBold\"}}>\n                I'll help you make a plan for your money.\n              </Text>\n              <Text style={{color: '#F5F5F5', fontSize: 15, fontFamily: \"Laila-SemiBold\"}}>\n                Shall we get to it?\n              </Text>\n            </View>\n            <View style={LoginScreenStyles.welcome}>\n            <View>\n            <ActivityIndicator style={{ opacity: this.state.spinnerOpacity }} animating={this.state.showSpinner} size={50} color=\"#40DBCE\" />\n            </View>\n              {this.state.signedIn ? \n                <Text style={{color: '#F5F5F5', fontSize: 18, fontFamily: \"Laila-SemiBold\"}}> {'Welcome back, ' + this.state.name} </Text>\n              : \n                <Text></Text>\n              }\n            </View>\n            <View style={LoginScreenStyles.signIn}>\n            {this.state.signedIn ? \n            <View>\n            <TouchableOpacity\n              onPress={() => navigation.navigate('Budget', {email: this.state.email, currentMonth: this.state.currentMonth, currentYear: this.state.currentYear, currentMonthID: this.state.currentMonthID, photoURL: this.state.photoUrl, signOut: this.signOut})}\n              style={style.button2_cta_style} >\n              <Text style={{fontFamily: \"Laila-SemiBold\"}}> Go to main page </Text>\n            </TouchableOpacity>\n            </View>\n              : \n              <View> \n              <TouchableOpacity\n                onPress={() => {this.signIn()}}\n                style={style.button2_light_style} >\n                <Text style={{color: '#4A0784', fontFamily: \"Laila-SemiBold\"}}> Sign in with Google </Text>\n              </TouchableOpacity>\n              </View>\n              }\n            </View>\n          </ImageBackground>  \n        </Container>\n      );\n    }\n  }\n}\n\n  export default LoginScreen;"]},"metadata":{},"sourceType":"module"}