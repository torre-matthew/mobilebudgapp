{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Components\\\\editBillForm.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Button, Content, Form, Item, Input, Text } from 'native-base';\nimport style from \"../Styles/Styles\";\nimport DatePicker from \"./datePicker\";\nimport ApiMethods from \"../utilities/apiMethods\";\n\nvar EditBillFormDisplay = function (_Component) {\n  _inherits(EditBillFormDisplay, _Component);\n\n  function EditBillFormDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditBillFormDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditBillFormDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentDate: \"\",\n      newDate: \"\",\n      currentName: \"\",\n      newName: \"\",\n      currentAmount: \"\",\n      newAmount: \"\",\n      incomeDataFromDB: [],\n      isPlanned: \"\",\n      fundingSourceID: \"\",\n      newFundingSourceID: \"\",\n      fundingSourceDisplay: \"\",\n      chosenPickerValue: \"\",\n      amountEditable: true,\n      unEditableAmountMessage: \"\"\n    };\n\n    _this.showExpenseConfirmationAlert = function (id, name, date, amount, isPlanned, fundingSource, loggedInUserID) {\n      Alert.alert('Edit Confirmation', 'Name: ' + name + ' Date: ' + date + ' Amount: ' + amount, [{\n        text: 'Nevermind',\n        onPress: function onPress() {\n          return console.log('Cancel Pressed');\n        },\n        style: 'cancel'\n      }, {\n        text: \"Yes, that's correct\",\n        onPress: function onPress() {\n          ApiMethods.editExpense(id, name, date, amount, isPlanned, fundingSource, loggedInUserID).then(function (res) {\n            if (res.data.nModified === 0) {\n              alert('Sorry, there was a problem. Please try again');\n            } else {\n              _this.props.updateWrapperComponent();\n\n              _this.props.navigation.navigate('Budget');\n            }\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.showIncomeConfirmationAlert = function (id, name, date, amount) {\n      Alert.alert('Edit Confirmation', 'Name: ' + name + ' Date: ' + date + ' Amount: ' + amount, [{\n        text: 'Nevermind',\n        onPress: function onPress() {\n          return console.log('Cancel Pressed');\n        },\n        style: 'cancel'\n      }, {\n        text: \"Yes, that's correct\",\n        onPress: function onPress() {\n          ApiMethods.editIncome(id, name, date, amount).then(function (res) {\n            if (res.data.nModified === 0) {\n              alert('Sorry, there was a problem. Please try again');\n            } else {\n              _this.props.updateWrapperComponent();\n\n              _this.props.navigation.navigate('Budget');\n            }\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.chooseFundingSource = function (value, index) {\n      if (value === \"none\") {\n        _this.setState({\n          chosenPickerValue: value,\n          isPlanned: false,\n          fundingSourceID: \"\",\n          newFundingSourceID: \"\"\n        });\n      } else {\n        _this.setState({\n          chosenPickerValue: value,\n          fundingSourceID: value,\n          isPlanned: true\n        });\n      }\n    };\n\n    _this.editField = function (text, input) {\n      switch (input) {\n        case \"date\":\n          _this.setState({\n            newDate: text\n          });\n\n          break;\n\n        case \"name\":\n          _this.setState({\n            newName: text\n          });\n\n          break;\n\n        case \"amount\":\n          _this.setState({\n            newAmount: text\n          });\n\n      }\n    };\n\n    _this.handleExpenseEditFormSubmit = function (event, id, nameChecker, dateChecker, amountChecker, isPlanned, fundingSource, loggedInUserID) {\n      event.preventDefault();\n      var name;\n      var date;\n      var amount;\n\n      if (dateChecker === \"\") {\n        date = _this.state.currentDate;\n      } else {\n        date = dateChecker;\n      }\n\n      if (nameChecker === \"\") {\n        name = _this.state.currentName;\n      } else {\n        name = nameChecker;\n      }\n\n      if (amountChecker === \"\") {\n        amount = _this.state.currentAmount;\n      } else {\n        amount = amountChecker;\n      }\n\n      _this.showExpenseConfirmationAlert(id, name, date, amount, isPlanned, fundingSource, loggedInUserID);\n    };\n\n    _this.handleIncomeEditFormSubmit = function (event, id, nameChecker, dateChecker, amountChecker) {\n      event.preventDefault();\n      var name;\n      var date;\n      var amount;\n\n      if (dateChecker === \"\") {\n        date = _this.state.currentDate;\n      } else {\n        date = dateChecker;\n      }\n\n      if (nameChecker === \"\") {\n        name = _this.state.currentName;\n      } else {\n        name = nameChecker;\n      }\n\n      if (amountChecker === \"\") {\n        amount = _this.state.currentAmount;\n      } else {\n        amount = amountChecker;\n      }\n\n      _this.showIncomeConfirmationAlert(id, name, date, amount);\n    };\n\n    _this.editLogic = function () {\n      switch (_this.props.whatsBeingEdited) {\n        case \"bill\":\n          _this.setState({\n            currentDate: _this.props.dueDate,\n            currentName: _this.props.billName,\n            currentAmount: _this.props.billAmount,\n            incomeDataFromDB: _this.props.incomeDataFromDB,\n            isPlanned: _this.props.billIsPlanned,\n            fundingSourceID: _this.props.billFundingSourceID\n          });\n\n          break;\n\n        case \"income\":\n          _this.setState({\n            currentDate: _this.props.incomeDate,\n            currentName: _this.props.incomeName,\n            currentAmount: _this.props.incomeAmount,\n            incomeDataFromDB: []\n          });\n\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EditBillFormDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.editLogic();\n\n      if (this.props.switcherClicked && this.props.whatsBeingEdited === \"income\") {\n        this.setState({\n          amountEditable: false,\n          unEditableAmountMessage: \" - not editable\"\n        });\n      } else {\n        this.setState({\n          amountEditable: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        }\n      }, React.createElement(Form, {\n        id: \"billForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        }\n      }, React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        }\n      }, React.createElement(DatePicker, {\n        defaultValue: new Date(this.state.currentDate).toDateString().substr(4, 12),\n        editDueDate: this.editField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        }\n      }, React.createElement(Input, {\n        defaultValue: this.state.currentName,\n        placeholder: \"Bill/Expense\",\n        onChangeText: function onChangeText(text) {\n          return _this2.editField(text, \"name\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        }\n      }, React.createElement(Input, {\n        defaultValue: this.state.currentAmount + this.state.unEditableAmountMessage,\n        keyboardType: \"numeric\",\n        editable: this.state.amountEditable,\n        placeholder: \"Amount\",\n        onChangeText: function onChangeText(text) {\n          return _this2.editField(text, \"amount\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      })), this.props.whatsBeingEdited === \"bill\" ? React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }, React.createElement(Picker, {\n        prompt: \"Select Funding Source\",\n        selectedValue: this.state.chosenPickerValue,\n        style: {\n          height: 50,\n          width: 400\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this2.chooseFundingSource(itemValue, itemIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        }\n      }, React.createElement(Picker.Item, {\n        label: this.props.fundingSourceName + \" \" + this.props.fundingSourceAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" (current)\",\n        value: this.props.billFundingSourceID,\n        key: this.props.billFundingSourceID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        }\n      }), this.state.incomeDataFromDB.map(function (income) {\n        return React.createElement(Picker.Item, {\n          label: income.name + \": \" + \"$\" + income.afterSpendingAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" remains\",\n          value: income._id,\n          key: income._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          }\n        });\n      }))) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.props.whatsBeingEdited === \"bill\" ? function (event) {\n          return _this2.handleExpenseEditFormSubmit(event, _this2.props.billID, _this2.state.newName, _this2.state.newDate, _this2.state.newAmount, _this2.state.isPlanned, _this2.state.fundingSourceID, _this2.props.loggedInUserID);\n        } : function (event) {\n          return _this2.handleIncomeEditFormSubmit(event, _this2.props.incomeID, _this2.state.newName, _this2.state.newDate, _this2.state.newAmount);\n        },\n        style: style.button_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        }\n      }, \" Submit \"))))));\n    }\n  }]);\n\n  return EditBillFormDisplay;\n}(Component);\n\nexport default EditBillFormDisplay;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Components/editBillForm.js"],"names":["React","Component","Container","Button","Content","Form","Item","Input","Text","style","DatePicker","ApiMethods","EditBillFormDisplay","state","currentDate","newDate","currentName","newName","currentAmount","newAmount","incomeDataFromDB","isPlanned","fundingSourceID","newFundingSourceID","fundingSourceDisplay","chosenPickerValue","amountEditable","unEditableAmountMessage","showExpenseConfirmationAlert","id","name","date","amount","fundingSource","loggedInUserID","Alert","alert","text","onPress","console","log","editExpense","then","res","data","nModified","props","updateWrapperComponent","navigation","navigate","catch","err","cancelable","showIncomeConfirmationAlert","editIncome","chooseFundingSource","value","index","setState","editField","input","handleExpenseEditFormSubmit","event","nameChecker","dateChecker","amountChecker","preventDefault","handleIncomeEditFormSubmit","editLogic","whatsBeingEdited","dueDate","billName","billAmount","billIsPlanned","billFundingSourceID","incomeDate","incomeName","incomeAmount","switcherClicked","Date","toDateString","substr","height","width","itemValue","itemIndex","fundingSourceName","fundingSourceAmount","toString","replace","map","income","afterSpendingAmount","_id","alignItems","billID","incomeID","button_style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Dimensions, TouchableOpacity, Picker, Alert } from 'react-native';\nimport { Container, Button, Content, Form, Item, Input, Text } from 'native-base';\nimport style from \"../Styles/Styles\";\nimport DatePicker from \"./datePicker\";\nimport ApiMethods from '../utilities/apiMethods';\n\nclass EditBillFormDisplay extends Component {\n    state = {\n        currentDate: \"\",\n        newDate: \"\",\n        currentName: \"\",\n        newName:\"\",\n        currentAmount: \"\",\n        newAmount:\"\",\n        incomeDataFromDB: [],\n        isPlanned: \"\",\n        fundingSourceID:\"\",\n        newFundingSourceID:\"\",\n        fundingSourceDisplay:\"\",\n        chosenPickerValue:\"\",\n        amountEditable: true,\n        unEditableAmountMessage: \"\"\n        }\n\ncomponentDidMount() {\n    this.editLogic();\n\n    if (this.props.switcherClicked && this.props.whatsBeingEdited === \"income\") {\n        this.setState({amountEditable: false, unEditableAmountMessage: \" - not editable\"})\n    } else {\n        this.setState({amountEditable: true})\n    }\n}\n\nshowExpenseConfirmationAlert = (id, name, date, amount, isPlanned, fundingSource, loggedInUserID) => {\n\n    Alert.alert(\n      'Edit Confirmation',\n      'Name: ' + name + ' Date: ' + date + ' Amount: ' + amount,\n      [ \n        {text: 'Nevermind', onPress: () => console.log('Cancel Pressed'), style: 'cancel'},\n        {text: \"Yes, that's correct\", onPress: () => {\n            ApiMethods.editExpense(id, name, date, amount, isPlanned, fundingSource, loggedInUserID)\n            .then(res => {\n                if (res.data.nModified === 0) {\n                    alert('Sorry, there was a problem. Please try again');\n                } else {\n                    this.props.updateWrapperComponent();\n                    this.props.navigation.navigate('Budget');\n                }\n                })\n            .catch(err => console.log(err));\n            }\n        },\n        ],\n      {cancelable: false},\n    );\n  }\n\n  showIncomeConfirmationAlert = (id, name, date, amount) => {\n\n    Alert.alert(\n      'Edit Confirmation',\n      'Name: ' + name + ' Date: ' + date + ' Amount: ' + amount,\n      [ \n        {text: 'Nevermind', onPress: () => console.log('Cancel Pressed'), style: 'cancel'},\n        {text: \"Yes, that's correct\", onPress: () => {\n            ApiMethods.editIncome(id, name, date, amount).then(res => {\n              if (res.data.nModified === 0) {\n                alert('Sorry, there was a problem. Please try again');\n              } else {\n                this.props.updateWrapperComponent();\n                this.props.navigation.navigate('Budget');\n              }\n            });\n            }\n        },\n        ],\n      {cancelable: false},\n    );\n  }\n\n\nchooseFundingSource = (value, index) => {\n\n    if (value === \"none\") {\n        this.setState(\n            {\n            chosenPickerValue: value,\n            isPlanned: false,\n            fundingSourceID: \"\",\n            newFundingSourceID: \"\",\n            })        \n    } else {\n        this.setState({\n            chosenPickerValue: value,\n            fundingSourceID: value,\n            isPlanned: true\n            })\n    }\n}\n\neditField = (text, input) => {\n\n    switch (input) {\n        case \"date\":\n            this.setState({\n                newDate: text,\n              });\n            break;\n        case \"name\":\n            this.setState({\n                newName: text,\n              });\n            break;\n        case \"amount\":\n            this.setState({\n                newAmount: text,\n              });\n    }\n  };\n\nhandleExpenseEditFormSubmit = (event, id, nameChecker, dateChecker, amountChecker, isPlanned, fundingSource, loggedInUserID) => {\n    event.preventDefault();\n\n    let name;\n    let date;\n    let amount;\n\n    if (dateChecker === \"\") {\n        date = this.state.currentDate\n    } else {\n        date = dateChecker\n    }\n\n    if (nameChecker === \"\") {\n        name = this.state.currentName\n    } else {\n        name = nameChecker\n    }\n\n    if (amountChecker === \"\") {\n        amount = this.state.currentAmount\n    } else {\n        amount = amountChecker\n    }\n    \n    this.showExpenseConfirmationAlert(id, name, date, amount, isPlanned, fundingSource, loggedInUserID);\n\n  };\n\n  handleIncomeEditFormSubmit = (event, id, nameChecker, dateChecker, amountChecker) => {\n    event.preventDefault();\n\n    let name;\n    let date;\n    let amount;\n\n    if (dateChecker === \"\") {\n        date = this.state.currentDate\n    } else {\n        date = dateChecker\n    }\n\n    if (nameChecker === \"\") {\n        name = this.state.currentName\n    } else {\n        name = nameChecker\n    }\n\n    if (amountChecker === \"\") {\n        amount = this.state.currentAmount\n    } else {\n        amount = amountChecker\n    }\n \n    this.showIncomeConfirmationAlert(id, name, date, amount);\n\n  };\n\n// This function changes the contents of the edit form depending on if it's a bill or an income entry that's being edited.\neditLogic = () => {\n    switch (this.props.whatsBeingEdited) {\n        case \"bill\":\n            this.setState({\n                currentDate: this.props.dueDate,\n                currentName: this.props.billName,\n                currentAmount: this.props.billAmount,\n                incomeDataFromDB: this.props.incomeDataFromDB,\n                isPlanned: this.props.billIsPlanned,\n                fundingSourceID: this.props.billFundingSourceID\n            });\n            break;\n        case \"income\":\n            this.setState({\n                currentDate: this.props.incomeDate,\n                currentName: this.props.incomeName,\n                currentAmount: this.props.incomeAmount,\n                incomeDataFromDB: []\n            });\n    }\n}\n\n    render () {\n        return (\n                <Content>\n                    <View>\n                        <Form id=\"billForm\">\n                            <Item>\n                                <DatePicker defaultValue={new Date(this.state.currentDate).toDateString().substr(4, 12)} editDueDate={this.editField} />\n                            </Item>\n                            <Item>\n                                <Input defaultValue={this.state.currentName} placeholder='Bill/Expense' onChangeText={(text) => this.editField(text, \"name\")} />\n                            </Item>\n                            <Item>\n                                <Input defaultValue={this.state.currentAmount + this.state.unEditableAmountMessage} keyboardType='numeric' editable={this.state.amountEditable} placeholder=\"Amount\" onChangeText={(text) => this.editField(text, \"amount\")} />\n                            </Item>\n                            {this.props.whatsBeingEdited === \"bill\" ?\n                            <Item>\n                            <Picker\n                            prompt=\"Select Funding Source\"\n                            selectedValue={this.state.chosenPickerValue}\n                            style={{height: 50, width: 400}}\n                            onValueChange={(itemValue, itemIndex) => this.chooseFundingSource(itemValue, itemIndex)} >\n                             <Picker.Item \n                                label={this.props.fundingSourceName + \" \" + this.props.fundingSourceAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" (current)\"} \n                                value={this.props.billFundingSourceID} \n                                key={this.props.billFundingSourceID} />\n                                {this.state.incomeDataFromDB.map(income => \n                                    <Picker.Item\n                                        label={income.name + \": \" + \"$\" + income.afterSpendingAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" remains\"} \n                                        value={income._id} \n                                        key={income._id}\n                                        />\n                                    )}                        \n                            </Picker>\n                            </Item>\n                            :<Text></Text>\n                            }\n                            <View style={{alignItems: 'center' }}>\n                            <TouchableOpacity\n                                onPress={this.props.whatsBeingEdited === \"bill\" \n                                ? \n                                (event) => this.handleExpenseEditFormSubmit(event, this.props.billID, this.state.newName, this.state.newDate, this.state.newAmount, this.state.isPlanned, this.state.fundingSourceID, this.props.loggedInUserID)\n                                :\n                                (event) => this.handleIncomeEditFormSubmit(event, this.props.incomeID, this.state.newName, this.state.newDate, this.state.newAmount)\n                                }\n                                style={style.button_style}>\n                                <Text> Submit </Text>\n                            </TouchableOpacity>\n                            </View>\n                        </Form>\n                    </View>\n                </Content>\n        );\n    }\n}\n\nexport default EditBillFormDisplay;"]},"metadata":{},"sourceType":"module"}