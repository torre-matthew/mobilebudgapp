{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Screens\\\\addEntryScreen.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport style from \"../Styles/Styles\";\nimport ApiMethods from \"../utilities/apiMethods\";\nimport MonthPickerModal2 from \"../Components/monthPickerModal2\";\nimport AddIncomeForm from \"../Components/addIncomeForm\";\nimport AddBillForm from \"../Components/addBillForm\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport EditEntryScreen from \"./editEntryScreen\";\nvar addEntryScreenStyles = StyleSheet.create({\n  income_button_inactive: {\n    backgroundColor: '#F5F5F5',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n  income_button_active: {\n    backgroundColor: '#40DBCE',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n  billExpense_button_inactive: {\n    backgroundColor: '#F5F5F5',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n  billExpense_button_active: {\n    backgroundColor: 'red',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  }\n});\n\nvar AddEntryScreen = function (_Component) {\n  _inherits(AddEntryScreen, _Component);\n\n  function AddEntryScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddEntryScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddEntryScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      income_name: '',\n      income_date: '',\n      income_amount: '',\n      due_date: '',\n      bill_name: '',\n      amount_due: '',\n      monthData: [],\n      loggedInUserID: '',\n      showIncomeForm: false,\n      showBillExpenseForm: false,\n      month: '',\n      monthID: '',\n      forBillTracker: false\n    };\n\n    _this.getMonthDataFromDB = function () {\n      return ApiMethods.getMonthData().then(function (monthDataArrayFromDB) {\n        _this.setState({\n          monthData: monthDataArrayFromDB.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleIncomeName = function (text) {\n      _this.setState({\n        income_name: text\n      });\n    };\n\n    _this.selectNewMonth = function (month, monthID) {\n      _this.setState({\n        month: month,\n        monthID: monthID\n      });\n    };\n\n    _this.handleIncomeDate = function (incomeDate) {\n      _this.setState({\n        income_date: incomeDate\n      });\n    };\n\n    _this.handleIncomeAmount = function (text) {\n      _this.setState({\n        income_amount: text\n      });\n    };\n\n    _this.handleDueDate = function (dueDate) {\n      _this.setState({\n        due_date: dueDate\n      });\n    };\n\n    _this.handleBillName = function (text) {\n      _this.setState({\n        bill_name: text\n      });\n    };\n\n    _this.handleBillAmount = function (text) {\n      _this.setState({\n        amount_due: text\n      });\n    };\n\n    _this.addToBillTracker = function () {\n      switch (_this.state.forBillTracker) {\n        case true:\n          _this.setState({\n            forBillTracker: false\n          });\n\n          break;\n\n        case false:\n          _this.setState({\n            forBillTracker: true\n          });\n\n      }\n    };\n\n    _this.handleFormSubmit = function _callee(event) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ApiMethods.addExpense(_this.state.bill_name, _this.state.due_date, _this.state.amount_due, _this.props.route.params.currentUserID, _this.state.monthID, _this.state.forBillTracker));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.props.route.params.getUnPlannedExpenseDataFromDB(_this.props.route.params.currentUserID, _this.state.monthID));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(_this.props.navigation.navigate('Budget'));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleAddIncomeFormSubmit = function _callee2(event) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ApiMethods.addIncome(_this.state.income_name, _this.state.income_date, _this.state.income_amount, _this.props.route.params.currentUserID, _this.state.monthID));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(_this.props.route.params.getIncomeDataFromDB(_this.props.route.params.currentUserID, _this.state.monthID));\n\n            case 4:\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(_this.props.navigation.navigate('Budget'));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEntryScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMonthDataFromDB();\n      this.setState({\n        month: this.props.route.params.currentMonth,\n        monthID: this.props.route.params.currentMonthID\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(Container, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }, React.createElement(View, {\n        style: {\n          height: '10%',\n          flexDirection: 'row',\n          marginTop: '10%',\n          marginBottom: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        }\n      }, React.createElement(View, {\n        style: {\n          flexGrow: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            showIncomeForm: true,\n            showBillExpenseForm: false\n          });\n        },\n        style: this.state.showIncomeForm ? addEntryScreenStyles.income_button_active : addEntryScreenStyles.income_button_inactive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontFamily: 'Laila-SemiBold',\n          color: this.state.showIncomeForm ? '#F5F5F5' : '#40DBCE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, \" Income \"))), React.createElement(View, {\n        style: {\n          flexGrow: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            showBillExpenseForm: true,\n            showIncomeForm: false\n          });\n        },\n        style: this.state.showBillExpenseForm ? addEntryScreenStyles.billExpense_button_active : addEntryScreenStyles.billExpense_button_inactive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontFamily: 'Laila-SemiBold',\n          color: this.state.showBillExpenseForm ? '#F5F5F5' : 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        }\n      }, \" Bill/Expense \")))), React.createElement(View, {\n        style: {\n          marginBottom: '2%',\n          marginTop: '5%',\n          height: '5%',\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(MonthPickerModal2, {\n        monthData: this.state.monthData,\n        currentMonth: this.state.month,\n        currentYear: this.state.currentYear,\n        currentMonthID: this.state.monthID,\n        selectNewMonth: this.selectNewMonth,\n        fetchData: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        }\n      })), this.state.showIncomeForm ? React.createElement(View, {\n        style: {\n          height: '60%',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        }\n      }, React.createElement(AddIncomeForm, {\n        handleIncomeAmount: this.handleIncomeAmount,\n        handleIncomeDate: this.handleIncomeDate,\n        handleIncomeName: this.handleIncomeName,\n        handleAddIncomeFormSubmit: this.handleAddIncomeFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      })) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }), this.state.showBillExpenseForm ? React.createElement(View, {\n        style: {\n          height: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }, React.createElement(View, {\n        onTouchEnd: this.addToBillTracker,\n        style: {\n          marginTop: 15,\n          flexDirection: 'row',\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        }\n      }, this.state.forBillTracker ? React.createElement(FontAwesome, {\n        name: \"check-square-o\",\n        size: 20,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }) : React.createElement(FontAwesome, {\n        name: \"square-o\",\n        size: 20,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: 'Laila-SemiBold',\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        }\n      }, \"Add to bill tracker checklist\")), React.createElement(AddBillForm, {\n        handleBillAmount: this.handleBillAmount,\n        handleDueDate: this.handleDueDate,\n        handleBillName: this.handleBillName,\n        handleFormSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      })) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        }\n      }));\n    }\n  }]);\n\n  return AddEntryScreen;\n}(Component);\n\nexport default AddEntryScreen;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Screens/addEntryScreen.js"],"names":["React","Component","Container","Header","Content","Card","CardItem","Text","Body","FontAwesome5","style","ApiMethods","MonthPickerModal2","AddIncomeForm","AddBillForm","FontAwesome","EditEntryScreen","addEntryScreenStyles","StyleSheet","create","income_button_inactive","backgroundColor","borderRadius","width","alignSelf","alignItems","padding","elevation","shadowColor","marginTop","marginBottom","income_button_active","billExpense_button_inactive","billExpense_button_active","AddEntryScreen","state","income_name","income_date","income_amount","due_date","bill_name","amount_due","monthData","loggedInUserID","showIncomeForm","showBillExpenseForm","month","monthID","forBillTracker","getMonthDataFromDB","getMonthData","then","monthDataArrayFromDB","setState","data","catch","err","console","log","handleIncomeName","text","selectNewMonth","handleIncomeDate","incomeDate","handleIncomeAmount","handleDueDate","dueDate","handleBillName","handleBillAmount","addToBillTracker","handleFormSubmit","event","addExpense","props","route","params","currentUserID","getUnPlannedExpenseDataFromDB","navigation","navigate","handleAddIncomeFormSubmit","addIncome","getIncomeDataFromDB","currentMonth","currentMonthID","flex","height","flexDirection","flexGrow","fontSize","fontFamily","color","currentYear","fetchData","justifyContent","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport style from \"../Styles/Styles\";\nimport ApiMethods from '../utilities/apiMethods';\nimport MonthPickerModal2 from '../Components/monthPickerModal2';\nimport AddIncomeForm from \"../Components/addIncomeForm\";\nimport AddBillForm from \"../Components/addBillForm\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport EditEntryScreen from \"./editEntryScreen\";\n\n\nconst addEntryScreenStyles = StyleSheet.create({\n\n  income_button_inactive: {\n    backgroundColor: '#F5F5F5',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n\n  income_button_active: {\n    backgroundColor: '#40DBCE',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n\n  billExpense_button_inactive: {\n    backgroundColor: '#F5F5F5',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n\n  billExpense_button_active: {\n    backgroundColor: 'red',\n    borderRadius: 60,\n    width: '90%',\n    alignSelf: 'center',\n    alignItems: 'center',\n    padding: 10,\n    elevation: 5,\n    shadowColor: '#4A0784',\n    marginTop: 15,\n    marginBottom: 15\n  },\n  \n  })\n\nclass AddEntryScreen extends Component {\n\n  state = {\n    income_name: '',\n    income_date: '',\n    income_amount: '',\n    due_date: '',\n    bill_name: '',\n    amount_due: '',\n    monthData: [],\n    loggedInUserID: '',\n    showIncomeForm: false,\n    showBillExpenseForm: false,\n    month: '',\n    monthID: '',\n    forBillTracker: false\n  }\n\n  componentDidMount(){\n    this.getMonthDataFromDB();\n    this.setState({\n      month: this.props.route.params.currentMonth,\n      monthID: this.props.route.params.currentMonthID  \n    });\n  }\n\n  getMonthDataFromDB = () => {\n    return ApiMethods.getMonthData()\n    .then(monthDataArrayFromDB => {\n      this.setState({\n        monthData: monthDataArrayFromDB.data\n      });\n    })\n    .catch(err => console.log(err));\n  }\n\n  handleIncomeName = text => {\n    this.setState({\n      income_name: text\n    });\n  };\n\n  selectNewMonth = (month, monthID) => {\n    this.setState({\n      month: month,\n      monthID: monthID\n    })\n  }\n  handleIncomeDate = (incomeDate) => {\n    \n    this.setState({\n      income_date: incomeDate\n    });\n  };\n\n  handleIncomeAmount = text => {\n    \n    this.setState({\n      income_amount: text\n    });\n  };\n  \n  handleDueDate = (dueDate) => {\n    \n    this.setState({\n      due_date: dueDate,\n    });\n  };\n  \n  \n  handleBillName = text => {\n    \n    this.setState({\n      bill_name: text,\n    });\n  };\n\n  handleBillAmount = text => {\n    \n    this.setState({\n      amount_due: text,\n    });\n  };\n\n  addToBillTracker = () => {\n    switch (this.state.forBillTracker) {\n      case true:\n        this.setState({forBillTracker: false})\n        break;\n      case false:\n        this.setState({forBillTracker: true})\n    }\n  }\n\n  handleFormSubmit = async (event) => {\n    await ApiMethods.addExpense(this.state.bill_name, this.state.due_date, this.state.amount_due, this.props.route.params.currentUserID, this.state.monthID, this.state.forBillTracker);\n    await this.props.route.params.getUnPlannedExpenseDataFromDB(this.props.route.params.currentUserID, this.state.monthID);\n    await this.props.navigation.navigate('Budget');\n    \n  };\n\n  handleAddIncomeFormSubmit = async (event) => {\n    await ApiMethods.addIncome(this.state.income_name, this.state.income_date, this.state.income_amount, this.props.route.params.currentUserID, this.state.monthID)\n    await this.props.route.params.getIncomeDataFromDB(this.props.route.params.currentUserID, this.state.monthID);\n    await this.props.navigation.navigate('Budget');\n  }\n\n render() {\n\n   const {navigation} = this.props;\n\n    return (\n      <Container style={{flex: 1}}>\n            <View style={{height: '10%', flexDirection: 'row', marginTop: '10%', marginBottom: '2%'}}>\n              <View style={{flexGrow: 5}}>\n                <TouchableOpacity\n                  onPress={() => {this.setState({showIncomeForm: true, showBillExpenseForm: false})}}\n                  style={this.state.showIncomeForm ? addEntryScreenStyles.income_button_active : addEntryScreenStyles.income_button_inactive}>\n                    <Text style={{fontSize: 15, fontFamily: 'Laila-SemiBold', color: this.state.showIncomeForm ? '#F5F5F5' : '#40DBCE'}}> Income </Text>\n                </TouchableOpacity>\n              </View>\n              <View style={{flexGrow: 4}}>\n                <TouchableOpacity\n                  onPress={() => {this.setState({showBillExpenseForm: true, showIncomeForm: false})}}\n                  style={this.state.showBillExpenseForm ? addEntryScreenStyles.billExpense_button_active : addEntryScreenStyles.billExpense_button_inactive}>\n                    <Text style={{fontSize: 15, fontFamily: 'Laila-SemiBold', color: this.state.showBillExpenseForm ? '#F5F5F5' : 'red'}}> Bill/Expense </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={{marginBottom: '2%', marginTop: '5%', height: '5%', alignSelf: 'center'}}>\n              <MonthPickerModal2 \n                monthData={this.state.monthData} \n                currentMonth={this.state.month}\n                currentYear={this.state.currentYear}\n                currentMonthID={this.state.monthID}\n                selectNewMonth={this.selectNewMonth}\n                fetchData={this.fetchData} />\n            </View>\n            {\n              this.state.showIncomeForm \n              ?\n              <View style={{height: '60%', justifyContent: 'center'}}>\n                <AddIncomeForm\n                  handleIncomeAmount={this.handleIncomeAmount}\n                  handleIncomeDate={this.handleIncomeDate}\n                  handleIncomeName={this.handleIncomeName}\n                  handleAddIncomeFormSubmit={this.handleAddIncomeFormSubmit}\n                />\n              </View>\n              :\n              <Text />           \n            }\n            {\n              this.state.showBillExpenseForm \n              ?\n              <View style={{height: '60%'}}>\n                <View onTouchEnd={this.addToBillTracker} style={{marginTop: 15, flexDirection: 'row', alignSelf: 'center'}}>\n                  {this.state.forBillTracker ?\n                    <FontAwesome name=\"check-square-o\" size={20} color=\"black\" />\n                    :\n                    <FontAwesome name=\"square-o\" size={20} color=\"black\" />\n                  }\n                <Text style={{fontSize: 16, fontFamily: 'Laila-SemiBold', marginLeft: 5}}>\n                  Add to bill tracker checklist \n                </Text> \n              </View>\n              <AddBillForm\n                handleBillAmount={this.handleBillAmount}\n                handleDueDate={this.handleDueDate}\n                handleBillName={this.handleBillName}\n                handleFormSubmit={this.handleFormSubmit} />\n              </View>\n              :\n              <Text />           \n            }\n      </Container>\n      \n    );\n  }\n}\n\n  export default AddEntryScreen;"]},"metadata":{},"sourceType":"module"}