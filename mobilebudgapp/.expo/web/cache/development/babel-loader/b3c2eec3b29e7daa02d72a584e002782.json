{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Components\\\\categoryDisplay.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport style from \"../Styles/Styles\";\nimport ApiMethods from \"../utilities/apiMethods\";\nimport Categories from \"../utilities/categories\";\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nvar CategoryDisplay = function (_Component) {\n  _inherits(CategoryDisplay, _Component);\n\n  function CategoryDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CategoryDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CategoryDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      categoryIcon: Categories.categoryIconLogic(_this.props.categoryName).icon,\n      categoryIconColor: Categories.categoryIconLogic(_this.props.categoryName).iconColor,\n      currentSelectedCategory: \"\",\n      categoryTotal: \"\"\n    };\n\n    _this.checkCurrentCategory = function () {\n      if (_this.props.currentCategoryID === _this.props.categoryID) {\n        _this.setState({\n          currentSelectedCategory: true\n        });\n      } else {\n        _this.setState({\n          currentSelectedCategory: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoryDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.checkCurrentCategory();\n      ApiMethods.getCategoryTotalByMonth(this.props.loggedInUserID, this.props.currentMonthID, this.props.categoryID).then(function (data) {\n        _this2.setState({\n          categoryTotal: data.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        onTouchEnd: function onTouchEnd() {\n          _this3.props.addCategory(_this3.props.billID, _this3.props.categoryID, _this3.props.categoryName);\n        },\n        style: {\n          position: 'relative',\n          flexDirection: 'row',\n          margin: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexGrow: 1,\n          backgroundColor: '#F5F5F5',\n          paddingLeft: 10,\n          paddingTop: 10,\n          paddingBottom: 10,\n          borderTopLeftRadius: 10,\n          borderBottomLeftRadius: 10,\n          elevation: 5,\n          backgroundColor: this.state.currentSelectedCategory ? this.state.categoryIconColor : '#F5F5F5'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, React.createElement(FontAwesome5, {\n        name: this.state.categoryIcon,\n        size: 16,\n        color: this.state.currentSelectedCategory ? '#F5F5F5' : this.state.categoryIconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexGrow: 10,\n          backgroundColor: '#F5F5F5',\n          paddingTop: 10,\n          paddingBottom: 10,\n          borderTopRightRadius: 10,\n          borderBottomRightRadius: 10,\n          elevation: 5,\n          backgroundColor: this.state.currentSelectedCategory ? this.state.categoryIconColor : '#F5F5F5'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          textAlign: 'left',\n          fontFamily: 'Laila-SemiBold',\n          color: this.state.currentSelectedCategory ? '#F5F5F5' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, \" \", this.props.categoryName, \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          textAlign: 'left',\n          fontFamily: 'Laila-SemiBold',\n          color: this.state.currentSelectedCategory ? '#F5F5F5' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, \" Total $\", this.state.categoryTotal, \" \")));\n    }\n  }]);\n\n  return CategoryDisplay;\n}(Component);\n\nexport default CategoryDisplay;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Components/categoryDisplay.js"],"names":["React","Component","Container","Header","Content","Card","CardItem","Text","Body","style","ApiMethods","Categories","FontAwesome5","CategoryDisplay","state","categoryIcon","categoryIconLogic","props","categoryName","icon","categoryIconColor","iconColor","currentSelectedCategory","categoryTotal","checkCurrentCategory","currentCategoryID","categoryID","setState","getCategoryTotalByMonth","loggedInUserID","currentMonthID","then","data","catch","err","console","log","addCategory","billID","position","flexDirection","margin","flex","flexGrow","backgroundColor","paddingLeft","paddingTop","paddingBottom","borderTopLeftRadius","borderBottomLeftRadius","elevation","borderTopRightRadius","borderBottomRightRadius","fontSize","textAlign","fontFamily","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Modal, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\r\nimport style from \"../Styles/Styles\";\r\nimport ApiMethods from '../utilities/apiMethods';\r\nimport Categories from '../utilities/categories';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\n\r\nclass CategoryDisplay extends Component {\r\n  state = {\r\n    categoryIcon: Categories.categoryIconLogic(this.props.categoryName).icon,\r\n    categoryIconColor: Categories.categoryIconLogic(this.props.categoryName).iconColor,\r\n    currentSelectedCategory: \"\",\r\n    categoryTotal: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.checkCurrentCategory();\r\n    ApiMethods.getCategoryTotalByMonth(this.props.loggedInUserID, this.props.currentMonthID, this.props.categoryID)\r\n                            .then(data => {\r\n                        \r\n                              this.setState({\r\n                              categoryTotal: data.data\r\n                            })\r\n                          \r\n                          })\r\n                            .catch(err => console.log(err));\r\n  }\r\n\r\n  checkCurrentCategory = () => {\r\n    if (this.props.currentCategoryID === this.props.categoryID) {\r\n      this.setState({\r\n        currentSelectedCategory: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentSelectedCategory: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render () {  \r\n    return (\r\n          <View onTouchEnd={() => {this.props.addCategory(this.props.billID, this.props.categoryID, this.props.categoryName)}} style={{position: 'relative', flexDirection: 'row', margin: 8}}>\r\n            <View style={{flex: 1, flexGrow: 1, backgroundColor: '#F5F5F5', paddingLeft: 10, paddingTop: 10, paddingBottom: 10, borderTopLeftRadius: 10, borderBottomLeftRadius: 10, elevation: 5, backgroundColor: this.state.currentSelectedCategory ? this.state.categoryIconColor: '#F5F5F5'}}> \r\n              <FontAwesome5 name={this.state.categoryIcon} size={16} color={this.state.currentSelectedCategory ? '#F5F5F5' : this.state.categoryIconColor} />\r\n            </View>\r\n            <View style={{flex: 1, flexGrow: 10, backgroundColor: '#F5F5F5', paddingTop: 10, paddingBottom: 10, borderTopRightRadius: 10, borderBottomRightRadius: 10, elevation: 5, backgroundColor: this.state.currentSelectedCategory ? this.state.categoryIconColor : '#F5F5F5'}}> \r\n              <Text style={{fontSize: 12, textAlign: 'left', fontFamily: 'Laila-SemiBold', color: this.state.currentSelectedCategory ? '#F5F5F5' : 'black'}}> {this.props.categoryName} </Text>\r\n              <Text style={{fontSize: 12, textAlign: 'left', fontFamily: 'Laila-SemiBold', color: this.state.currentSelectedCategory ? '#F5F5F5' : 'black'}}> Total ${this.state.categoryTotal} </Text>\r\n            </View>\r\n          </View>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default CategoryDisplay;"]},"metadata":{},"sourceType":"module"}