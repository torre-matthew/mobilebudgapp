{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Components\\\\monthPickerModal.js\";\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ViewBase } from \"react-native-web/dist/index\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport MonthDisplay from \"./monthDisplay\";\nimport style from \"../Styles/Styles\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport ApiMethods from \"../utilities/apiMethods\";\n\nvar MonthPickerModal = function (_Component) {\n  _inherits(MonthPickerModal, _Component);\n\n  function MonthPickerModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MonthPickerModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MonthPickerModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modalVisible: false\n    };\n\n    _this.closeModal = function () {\n      _this.setModalVisible(!_this.state.modalVisible);\n    };\n\n    return _this;\n  }\n\n  _createClass(MonthPickerModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      this.setState({\n        modalVisible: visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          marginTop: '10%',\n          marginBottom: '5%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.modalVisible,\n        onRequestClose: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          textAlign: 'center',\n          margin: 20,\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, \" Select Month \"), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }, this.props.monthData.map(function (monthData) {\n        return React.createElement(MonthDisplay, {\n          month: monthData.month,\n          year: monthData.year,\n          key: monthData._id,\n          monthID: monthData._id,\n          selectNewMonth: _this2.props.selectNewMonth,\n          closeModal: _this2.closeModal,\n          fetchData: _this2.props.fetchData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          }\n        });\n      }))), React.createElement(View, {\n        onTouchEnd: function onTouchEnd() {\n          _this2.setModalVisible(true);\n        },\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignSelf: 'center',\n          marginTop: 5,\n          marginBottom: 5,\n          marginLeft: 20,\n          borderRadius: 10,\n          width: '95%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          color: \"#40DBCE\",\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, \" \", this.props.currentMonth, \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          color: \"#40DBCE\",\n          paddingRight: 8,\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, \" \", this.props.currentYear, \" \"), React.createElement(FontAwesome5, {\n        style: {\n          alignSelf: 'center',\n          paddingRight: 8\n        },\n        name: \"caret-down\",\n        size: 20,\n        color: \"#40DBCE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      })));\n    }\n  }]);\n\n  return MonthPickerModal;\n}(Component);\n\nexport default MonthPickerModal;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Components/monthPickerModal.js"],"names":["React","Component","ViewBase","TouchableOpacity","MonthDisplay","style","FontAwesome5","ApiMethods","MonthPickerModal","state","modalVisible","closeModal","setModalVisible","visible","setState","marginTop","marginBottom","fontSize","textAlign","margin","fontFamily","props","monthData","map","month","year","_id","selectNewMonth","fetchData","flex","flexDirection","alignSelf","marginLeft","borderRadius","width","color","currentMonth","paddingRight","currentYear"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Modal, Text, TouchableHighlight, View, Alert, Dimensions, ScrollView, ViewBase} from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport MonthDisplay from \"./monthDisplay\";\r\nimport style from \"../Styles/Styles\";\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport ApiMethods from '../utilities/apiMethods';\r\n\r\nclass MonthPickerModal extends Component {\r\n  state = {\r\n    modalVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  setModalVisible(visible) {\r\n    this.setState({modalVisible: visible});\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setModalVisible(!this.state.modalVisible);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{marginTop: '10%', marginBottom: '5%'}}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={false}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={this.closeModal}>\r\n            <Text style={{fontSize: 18, textAlign: 'center', margin: 20, fontFamily: 'Laila-SemiBold'}}> Select Month </Text>\r\n          <ScrollView>\r\n            {\r\n              this.props.monthData.map(monthData => \r\n              <MonthDisplay \r\n                month={monthData.month} \r\n                year={monthData.year}\r\n                key={monthData._id}\r\n                monthID={monthData._id} \r\n                selectNewMonth={this.props.selectNewMonth}\r\n                closeModal={this.closeModal}\r\n                fetchData={this.props.fetchData}\r\n                />\r\n              )\r\n            }\r\n          </ScrollView>\r\n        </Modal>\r\n        <View onTouchEnd={() => {this.setModalVisible(true)}} style={{ flex: 1, flexDirection: 'row', alignSelf: 'center', marginTop: 5, marginBottom: 5, marginLeft: 20, borderRadius: 10, width: '95%'}}>        \r\n          <Text style={{fontSize: 25, color: \"#40DBCE\", fontFamily: 'Laila-SemiBold'}}> {this.props.currentMonth} </Text>\r\n          <Text style={{fontSize: 25, color: \"#40DBCE\", paddingRight: 8, fontFamily: 'Laila-SemiBold'}}> {this.props.currentYear} </Text>\r\n          <FontAwesome5 style={{alignSelf: 'center', paddingRight: 8}} name=\"caret-down\" size={20} color=\"#40DBCE\" />\r\n        </View>\r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MonthPickerModal;"]},"metadata":{},"sourceType":"module"}