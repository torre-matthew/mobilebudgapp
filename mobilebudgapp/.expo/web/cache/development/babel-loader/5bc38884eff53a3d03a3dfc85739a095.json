{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Components\\\\datePicker.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Button, Content, Form, Item, Input, Text, DatePicker } from 'native-base';\nimport style from \"../Styles/Styles\";\nimport ApiMethods from \"../utilities/apiMethods\";\n\nvar DatePickerComponent = function (_Component) {\n  _inherits(DatePickerComponent, _Component);\n\n  function DatePickerComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DatePickerComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DatePickerComponent).call(this, props));\n    _this.state = {\n      chosenDate: \"\"\n    };\n    _this.setDate = _this.setDate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DatePickerComponent, [{\n    key: \"setDate\",\n    value: function setDate(newDate) {\n      var _this2 = this;\n\n      if (!this.props.editDueDate) {\n        this.setState({\n          chosenDate: newDate\n        }, function () {\n          _this2.props.handleDueDate(_this2.state.chosenDate);\n        });\n      } else {\n        this.setState({\n          chosenDate: newDate\n        }, function () {\n          _this2.props.editDueDate(_this2.state.chosenDate, \"date\");\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }, React.createElement(DatePicker, {\n        defaultDate: new Date(),\n        minimumDate: new Date(2020, 1, 1),\n        maximumDate: new Date(2022, 12, 31),\n        locale: \"en\",\n        timeZoneOffsetInMinutes: undefined,\n        modalTransparent: false,\n        animationType: \"slide\",\n        androidMode: \"default\",\n        placeHolderText: this.props.defaultValue ? this.props.defaultValue : \"Date\",\n        textStyle: {\n          color: \"black\"\n        },\n        placeHolderTextStyle: {\n          color: \"black\"\n        },\n        onDateChange: this.setDate,\n        disabled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }));\n    }\n  }]);\n\n  return DatePickerComponent;\n}(Component);\n\nexport default DatePickerComponent;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Components/datePicker.js"],"names":["React","Component","Container","Button","Content","Form","Item","Input","Text","DatePicker","style","ApiMethods","DatePickerComponent","props","state","chosenDate","setDate","bind","newDate","editDueDate","setState","handleDueDate","Date","undefined","defaultValue","color"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDC,IAAxD,EAA8DC,UAA9D,QAAgF,aAAhF;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;;IAKMC,mB;;;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAC;AAAb,KAAb;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AAHe;AAIhB;;;;4BAECC,O,EAAS;AAAA;;AACb,UAAI,CAAC,KAAKL,KAAL,CAAWM,WAAhB,EAA6B;AACzB,aAAKC,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAEG;AAAd,SAAd,EAAuC,YAAM;AAAC,UAAA,MAAI,CAACL,KAAL,CAAWQ,aAAX,CAAyB,MAAI,CAACP,KAAL,CAAWC,UAApC;AAAgD,SAA9F;AACH,OAFD,MAEO;AACH,aAAKK,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAEG;AAAd,SAAd,EAAuC,YAAM;AAAC,UAAA,MAAI,CAACL,KAAL,CAAWM,WAAX,CAAuB,MAAI,CAACL,KAAL,CAAWC,UAAlC,EAA8C,MAA9C;AAAsD,SAApG;AACH;AACJ;;;6BACQ;AACD,aACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACA,QAAA,WAAW,EAAE,IAAIO,IAAJ,EADb;AAEA,QAAA,WAAW,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFb;AAGA,QAAA,WAAW,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAHb;AAIA,QAAA,MAAM,EAAE,IAJR;AAKA,QAAA,uBAAuB,EAAEC,SALzB;AAMA,QAAA,gBAAgB,EAAE,KANlB;AAOA,QAAA,aAAa,EAAE,OAPf;AAQA,QAAA,WAAW,EAAE,SARb;AASA,QAAA,eAAe,EAAE,KAAKV,KAAL,CAAWW,YAAX,GAA0B,KAAKX,KAAL,CAAWW,YAArC,GAAoD,MATrE;AAUA,QAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAVX;AAWA,QAAA,oBAAoB,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAXtB;AAYA,QAAA,YAAY,EAAE,KAAKT,OAZnB;AAaA,QAAA,QAAQ,EAAE,KAbV;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAmBH;;;;EAlC6Bf,S;;AAuClC,eAAeW,mBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Dimensions, TouchableOpacity, Picker, Alert } from 'react-native';\r\nimport { Container, Button, Content, Form, Item, Input, Text, DatePicker } from 'native-base';\r\nimport style from \"../Styles/Styles\";\r\nimport ApiMethods from '../utilities/apiMethods';\r\n\r\n\r\n// toString().substr(4, 12)\r\n\r\nclass DatePickerComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { chosenDate:\"\" };\r\n        this.setDate = this.setDate.bind(this);\r\n      }\r\n\r\nsetDate(newDate) {\r\n    if (!this.props.editDueDate) {\r\n        this.setState({ chosenDate: newDate }, () => {this.props.handleDueDate(this.state.chosenDate)});\r\n    } else {\r\n        this.setState({ chosenDate: newDate }, () => {this.props.editDueDate(this.state.chosenDate, \"date\")});\r\n    }\r\n}\r\nrender() {\r\n        return (\r\n            <Content>\r\n                <DatePicker\r\n                defaultDate={new Date()}\r\n                minimumDate={new Date(2020, 1, 1)}\r\n                maximumDate={new Date(2022, 12, 31)}\r\n                locale={\"en\"}\r\n                timeZoneOffsetInMinutes={undefined}\r\n                modalTransparent={false}\r\n                animationType={\"slide\"}\r\n                androidMode={\"default\"}\r\n                placeHolderText={this.props.defaultValue ? this.props.defaultValue : \"Date\"}\r\n                textStyle={{ color: \"black\" }}\r\n                placeHolderTextStyle={{ color: \"black\" }}\r\n                onDateChange={this.setDate}\r\n                disabled={false}\r\n                />\r\n            </Content>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DatePickerComponent;"]},"metadata":{},"sourceType":"module"}