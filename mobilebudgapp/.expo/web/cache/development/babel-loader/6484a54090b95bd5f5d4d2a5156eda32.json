{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Components\\\\mainPage.js\";\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Button, Content, Form, Item, Input } from 'native-base';\nimport SummaryWrapper from \"./summaryWrapper\";\nimport UnplannedBillWrapper from \"./unplannedBillWrapper\";\nimport PlannedBillWrapper from \"./plannedBillWrapper\";\nimport MonthPickerModal from \"./monthPickerModal\";\nimport SlideOutDrawer from \"./slideOutDrawer\";\nimport QuickActionDrawer2 from \"../Components/quickActionDrawer2\";\nimport OverLay from \"../Components/overLay\";\nimport CategorySlideOutOverlay from \"../Components/overlays/categorySlideOutOverlay\";\nimport IncomeSummarySwitcher from \"./incomeSummarySwitcher\";\nimport { thisExpression } from '@babel/types';\nimport AppFooter from \"./appfooter\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport ApiMethods from \"../utilities/apiMethods\";\nimport * as Font from 'expo-font';\nimport LoadFonts from \"../assets/fonts\";\nimport AppHeader from \"./appheader\";\nimport Animation from \"../utilities/animation\";\n\nvar style = require(\"../Styles/Styles\");\n\nvar backgroundImage = require(\"../Styles/images/app background 3.png\");\n\nfunction wait(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nvar MainPage = function (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      due_date: '',\n      bill_name: '',\n      amount_due: '',\n      currentUnPlannedExpensesFromDB: [],\n      currentPlannedExpensesFromDB: [],\n      income_name: '',\n      income_date: '',\n      income_amount: '',\n      currentIncomeFromDB: _this.props.currentIncomeFromDB,\n      afterSpendingData: [],\n      monthData: [],\n      arrayOfCategories: [],\n      currentMonthID: _this.props.currentMonthID,\n      currentMonth: _this.props.currentMonth,\n      currentYear: _this.props.currentYear,\n      doesCurrentMonthNeedData: false,\n      currentTotalIncome: 0,\n      afterSpendingIncomeTotal: 0,\n      recentlyAdded: false,\n      afterSpendingClicked: false,\n      plannedClicked: false,\n      refreshing: false,\n      signedIn: false,\n      loggedInUsersEmail: _this.props.loggedInUsersEmail,\n      loggedInUserID: \"\",\n      photoUrl: _this.props.photoURL,\n      spinnerSize: 20,\n      spinnerOpacity: 1,\n      showSpinner: true,\n      fontsLoaded: false,\n      showDrawer: false,\n      showCategories: false,\n      showOverLay: false,\n      showCategorySlideOutOverlay: false,\n      selectedBillID: \"\",\n      selectedBillName: \"\",\n      selectedBillAmount: \"\",\n      selectedBillDueDate: \"\",\n      selectedBillCategoryName: \"\",\n      selectedBillCategoryID: \"\",\n      selectedFundingSourceID: \"\",\n      selectedFundingSourceName: \"\",\n      selectedFundingSourceAmount: \"\",\n      selectedBillCategoryIconName: \"\",\n      selectedBillCategoryIconColor: \"\",\n      selectedBillIsPaid: \"\",\n      selectedBillIsForBillTracker: \"\",\n      selectedBillIsPlanned: \"\",\n      whatsBeingEdited: \"\",\n      fontSize: 0,\n      componentUpdateSwitch: false\n    };\n\n    _this.fetchData = function () {\n      _this.props.fetchData(_this.props.currentUserID, _this.props.currentMonthID);\n\n      _this.getTotalIncome();\n\n      _this.setState({\n        spinnerSize: 0,\n        spinnerOpacity: 0,\n        showSpinner: false\n      });\n    };\n\n    _this.onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      wait(200).then(function () {\n        _this.setState({\n          spinnerSize: 20,\n          spinnerOpacity: 1,\n          showSpinner: true\n        });\n\n        _this.fetchData();\n\n        _this.setState({\n          refreshing: false\n        });\n      });\n    };\n\n    _this.updateComponent = function () {\n      _this.setState({\n        state: _this.state\n      });\n    };\n\n    _this.updateExpensesOnUserRecord = function () {\n      ApiMethods.updateExpensesOnUserRecord(_this.props.currentUserID).then(function (data) {\n        return res.json(data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getTotalIncome = function () {\n      if (!_this.state.afterSpendingClicked) {\n        var totalIncome = 0;\n\n        _this.props.currentIncomeFromDB.forEach(function (element) {\n          totalIncome += parseFloat(element.amount);\n        });\n\n        _this.setState({\n          currentTotalIncome: totalIncome.toFixed(2)\n        });\n\n        return totalIncome;\n      } else {\n        var _totalIncome = 0;\n        var totalSpent = 0;\n        var afterSpendingIncomeTotal = 0;\n\n        _this.props.currentIncomeFromDB.forEach(function (element) {\n          _totalIncome += parseFloat(element.amount);\n        });\n\n        _this.props.currentPlannedExpensesFromDB.forEach(function (element) {\n          totalSpent += parseFloat(element.amountOfExpense);\n        });\n\n        afterSpendingIncomeTotal = _totalIncome - totalSpent;\n\n        _this.setState({\n          afterSpendingIncomeTotal: afterSpendingIncomeTotal.toFixed(2)\n        });\n\n        return afterSpendingIncomeTotal;\n      }\n    };\n\n    _this.switcherLogic = function (switcher) {\n      switch (switcher) {\n        case 'after':\n          _this.setState({\n            afterSpendingClicked: true\n          }, function () {\n            _this.getTotalIncome();\n          });\n\n          break;\n\n        case 'before':\n          _this.setState({\n            afterSpendingClicked: false\n          }, function () {\n            _this.getTotalIncome();\n          });\n\n          break;\n\n        case 'unplanned':\n          _this.setState({\n            plannedClicked: true\n          }, function () {});\n\n          break;\n\n        case 'planned':\n          _this.setState({\n            plannedClicked: false\n          }, function () {});\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (switcher === 'after') {\n        _this.setState({\n          afterSpendingClicked: true\n        }, function () {\n          _this.getTotalIncome();\n        });\n      } else {\n        _this.setState({\n          afterSpendingClicked: false\n        }, function () {\n          _this.getTotalIncome();\n        });\n      }\n    };\n\n    _this.showDrawerAndOverLayLogic = function (billID, billName, billAmount, categoryName, categoryID, selectedBillCategoryIconName, selectedBillCategoryIconColor, billDueDate, fundingSourceID, fundingSourceName, fundingSourceAmount, billIsPaid, billIsPlanned, whatsBeingEdited, forBillTracker) {\n      _this.setState({\n        showDrawer: true,\n        showOverLay: true,\n        selectedBillID: billID,\n        selectedBillName: billName,\n        selectedBillAmount: billAmount,\n        selectedBillCategoryName: categoryName,\n        selectedBillCategoryID: categoryID,\n        selectedBillCategoryIconName: selectedBillCategoryIconName,\n        selectedBillCategoryIconColor: selectedBillCategoryIconColor,\n        selectedBillDueDate: billDueDate,\n        selectedFundingSourceID: fundingSourceID,\n        selectedFundingSourceName: fundingSourceName,\n        selectedFundingSourceAmount: fundingSourceAmount,\n        selectedBillIsPaid: billIsPaid,\n        selectedBillIsPlanned: billIsPlanned,\n        whatsBeingEdited: whatsBeingEdited,\n        selectedBillIsForBillTracker: forBillTracker\n      });\n    };\n\n    _this.showCategoriesDrawer = function () {\n      _this.getAllCategories();\n\n      _this.setState({\n        showCategories: true,\n        showCategorySlideOutOverlay: true\n      });\n    };\n\n    _this.hideDrawerAndOverLayLogic = function (overLay) {\n      switch (overLay) {\n        case \"quickActionDrawer\":\n          _this.setState({\n            showDrawer: false,\n            showOverLay: false\n          });\n\n          break;\n\n        case \"categorySlideOut\":\n          _this.setState({\n            showCategories: false,\n            showCategorySlideOutOverlay: false\n          });\n\n      }\n    };\n\n    _this.selectFundingSource = function (fundingSourceID) {\n      Alert.alert('Plan ' + _this.state.selectedBillName + ' with this income?', '', [{\n        text: 'Nevermind',\n        style: 'cancel'\n      }, {\n        text: 'Ok',\n        onPress: function onPress() {\n          ApiMethods.editExpense(_this.state.selectedBillID, _this.state.selectedBillName, _this.state.selectedBillDueDate, _this.state.selectedBillAmount, true, fundingSourceID, _this.props.currentUserID).then(function (res) {\n            if (res.data.nModified === 0) {\n              alert('Sorry, there was a problem. Please try again');\n            } else {\n              _this.fetchData();\n\n              _this.props.navigation.navigate('Budget');\n            }\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.moveToNextMonth = function () {\n      Alert.alert('Move ' + _this.state.selectedBillName + ' to next month?', '', [{\n        text: 'Nevermind',\n        style: 'cancel'\n      }, {\n        text: 'Ok',\n        onPress: function onPress() {\n          ApiMethods.moveToNextMonth(_this.state.selectedBillID).then(function (data) {\n            return data;\n          }).catch(function (err) {\n            return console.log(err);\n          });\n\n          _this.fetchData();\n\n          _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.splitEntry = function () {\n      Alert.alert('Split ' + _this.state.selectedBillName + '?', 'I will create a new entry and evenly divide the amounts between this item and the newly created one?', [{\n        text: 'Nevermind',\n        style: 'cancel'\n      }, {\n        text: 'Ok',\n        onPress: function onPress() {\n          ApiMethods.splitEntry(_this.state.selectedBillID).then(function (data) {\n            return data;\n          }).catch(function (err) {\n            return console.log(err);\n          });\n\n          _this.onRefresh();\n\n          _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.markAsUnplanned = function () {\n      Alert.alert('Not ready to plan ' + _this.state.selectedBillName + '?', 'I will move this back to unplanned bills and expenses.', [{\n        text: 'Nevermind',\n        style: 'cancel'\n      }, {\n        text: 'Ok',\n        onPress: function onPress() {\n          ApiMethods.editExpense(_this.state.selectedBillID, _this.state.selectedBillName, _this.state.selectedBillDueDate, _this.state.selectedBillAmount, false, \"\", _this.props.currentUserID).then(function (res) {\n            if (res.data.nModified === 0) {\n              alert('Sorry, there was a problem. Please try again');\n            } else {\n              _this.fetchData();\n\n              _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n            }\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.addToBillTracker = function (billID) {\n      ApiMethods.addToBillTracker(billID).then(function (res) {\n        alert(_this.state.selectedBillName + ' has been added to your payment tracker.');\n\n        _this.showDrawerAndOverLayLogic(_this.state.selectedBillID, _this.state.selectedBillName, _this.state.selectedBillAmount, _this.state.selectedBillCategoryName, _this.state.selectedBillCategoryID, _this.state.selectedBillCategoryIconName, _this.state.selectedBillCategoryIconColor, _this.state.selectedBillDueDate, _this.state.selectedFundingSourceID, _this.state.selectedFundingSourceName, _this.state.selectedFundingSourceAmount, _this.state.selectedBillIsPaid, _this.state.selectedBillIsPlanned, \"bill\", true);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.markAsPaid = function () {\n      switch (_this.state.selectedBillIsPaid) {\n        case true:\n          ApiMethods.markExpenseAsPaid(_this.state.selectedBillID, false).then(function (data) {\n            _this.onRefresh();\n\n            _this.fetchData();\n\n            _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n          }).catch(function (err) {\n            return console.log(err);\n          });\n          break;\n\n        case false:\n          ApiMethods.markExpenseAsPaid(_this.state.selectedBillID, true).then(function (data) {\n            _this.onRefresh();\n\n            _this.fetchData();\n\n            _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n          }).catch(function (err) {\n            return console.log(err);\n          });\n      }\n    };\n\n    _this.deleteExpense = function () {\n      ApiMethods.deleteExpense(_this.state.selectedBillID).then(function (res) {\n        if (res.data.deletedCount === 0) {\n          alert('Sorry, ' + idToDelete + ' could not be deleted');\n        } else if (_this.state.selectedBillIsPlanned) {\n          alert('You have successfully deleted ' + _this.state.selectedBillName);\n          ApiMethods.updateAfterSpendingAmount(_this.state.selectedFundingSourceID).then(function (data) {\n            ApiMethods.updateIncomeOnUserRecord(_this.props.currentUserID).then(function (data) {\n              _this.fetchData();\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          }).catch(function (err) {\n            return console.log(err);\n          });\n\n          _this.fetchData();\n\n          _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n\n          _this.props.navigation.navigate('Budget');\n        } else {\n          alert('You have successfully deleted ' + _this.state.selectedBillName);\n          ApiMethods.updateIncomeOnUserRecord(_this.props.currentUserID).then(function (data) {\n            _this.fetchData();\n          }).catch(function (err) {\n            return console.log(err);\n          });\n\n          _this.fetchData();\n\n          _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n\n          _this.props.navigation.navigate('Budget');\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.goToEditScreen = function () {\n      _this.props.navigation.navigate('Edit Entry', {\n        navigation: _this.props.navigation,\n        dueDate: _this.state.selectedBillDueDate,\n        billName: _this.state.selectedBillName,\n        billAmount: _this.state.selectedBillAmount,\n        billID: _this.state.selectedBillID,\n        billIsPlanned: _this.state.selectedBillIsPlanned,\n        billFundingSourceID: _this.state.selectedFundingSourceID,\n        billCategoryName: _this.state.selectedBillCategoryName,\n        billCategoryID: _this.state.selectedBillCategoryID,\n        fundingSourceName: _this.state.selectedFundingSourceName,\n        fundingSourceAmount: _this.state.selectedFundingSourceAmount,\n        fetchData: _this.fetchData,\n        incomeDataFromDB: _this.props.currentIncomeFromDB,\n        whatsBeingEdited: _this.state.whatsBeingEdited,\n        updateWrapperComponent: _this.fetchData,\n        loggedInUserID: _this.props.currentUserID,\n        currentMonthID: _this.state.currentMonthID,\n        deleteExpense: _this.deleteExpense,\n        hideDrawerAndOverLayLogic: _this.hideDrawerAndOverLayLogic,\n        showDrawerAndOverLayLogic: _this.showDrawerAndOverLayLogic,\n        showDrawer: _this.state.showDrawer,\n        showOverLay: _this.state.showOverLay,\n        showOverLayOnEditScreen: false,\n        isThisPlanned: _this.state.plannedClicked,\n        addCategory: _this.addCategory\n      });\n    };\n\n    _this.addCategory = function (expenseID, categoryID, categoryName) {\n      ApiMethods.addCategoryToEntry(expenseID, categoryID, categoryName).then(function (data) {\n        _this.onRefresh();\n\n        _this.setState({\n          selectedBillCategoryID: categoryID,\n          selectedBillCategoryName: categoryName\n        });\n\n        _this.hideDrawerAndOverLayLogic(\"categorySlideOut\");\n\n        _this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getAllCategories = function () {\n      ApiMethods.getAllCategories().then(function (arrayOfCategories) {\n        _this.setState({\n          arrayOfCategories: arrayOfCategories.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        }\n      }, React.createElement(ImageBackground, {\n        source: backgroundImage,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        }\n      }, React.createElement(AppHeader, {\n        photoURL: this.state.photoUrl,\n        navigation: this.props.navigation,\n        signOut: this.props.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        }\n      }), React.createElement(ScrollView, {\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this.onRefresh,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        }\n      }, React.createElement(OverLay, {\n        show: this.state.showOverLay,\n        showDrawerAndOverLayLogic: this.showDrawerAndOverLayLogic,\n        hideDrawerAndOverLayLogic: this.hideDrawerAndOverLayLogic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        }\n      }), React.createElement(View, {\n        style: {\n          zIndex: 0,\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        }\n      }, this.state.showSpinner ? React.createElement(ActivityIndicator, {\n        style: {\n          opacity: this.state.spinnerOpacity\n        },\n        animating: this.state.showSpinner,\n        size: this.state.spinnerSize,\n        color: \"#40DBCE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        }\n      }) : React.createElement(MonthPickerModal, {\n        monthData: this.props.monthData,\n        currentMonth: this.props.currentMonth,\n        currentYear: this.props.currentYear,\n        currentMonthID: this.props.currentMonthID,\n        selectNewMonth: this.props.selectNewMonth,\n        fetchData: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        }\n      }), React.createElement(SummaryWrapper, {\n        incomeDataFromDB: !this.state.afterSpendingClicked ? this.props.currentIncomeFromDB : this.state.afterSpendingData,\n        switcherLogic: this.switcherLogic,\n        handleIncomeAmount: this.handleIncomeAmount,\n        handleIncomeDate: this.handleIncomeDate,\n        handleIncomeName: this.handleIncomeName,\n        handleAddIncomeFormSubmit: this.handleAddIncomeFormSubmit,\n        currentTotalIncome: !this.state.afterSpendingClicked ? this.state.currentTotalIncome : this.state.afterSpendingIncomeTotal,\n        switcherClicked: this.state.afterSpendingClicked,\n        switcherStyle: this.state.switcherClickedStyle,\n        incomeDataFromDB: this.props.currentIncomeFromDB,\n        loggedInUserID: this.props.currentUserID,\n        fetchData: this.fetchData,\n        spinnerSize: this.state.spinnerSize,\n        spinnerOpacity: this.state.spinnerOpacity,\n        showSpinner: this.state.showSpinner,\n        monthData: this.props.monthData,\n        currentMonth: this.state.currentMonth,\n        currentMonthID: this.state.currentMonthID,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        }\n      }), React.createElement(UnplannedBillWrapper, {\n        expenseDataFromDB: !this.state.plannedClicked ? this.props.currentUnPlannedExpensesFromDB : this.props.currentPlannedExpensesFromDB,\n        incomeDataFromDB: this.props.currentIncomeFromDB,\n        switcherLogic: this.switcherLogic,\n        handleBillAmount: this.handleBillAmount,\n        handleDueDate: this.handleDueDate,\n        plannedClicked: this.state.plannedClicked,\n        updateComponent: this.updateComponent,\n        updateExpensesOnUserRecord: this.updateExpensesOnUserRecord,\n        handleBillName: this.handleBillName,\n        handleFormSubmit: this.handleFormSubmit,\n        loggedInUserID: this.props.currentUserID,\n        fetchData: this.fetchData,\n        refresh: this.onRefresh,\n        spinnerSize: this.state.spinnerSize,\n        spinnerOpacity: this.state.spinnerOpacity,\n        showSpinner: this.state.showSpinner,\n        currentMonth: this.state.currentMonth,\n        currentMonthID: this.state.currentMonthID,\n        navigation: this.props.navigation,\n        showDrawerAndOverLayLogic: this.showDrawerAndOverLayLogic,\n        hide: this.hideDrawerAndOverLayLogic,\n        componentUpdateSwitch: this.state.componentUpdateSwitch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        }\n      }))), React.createElement(QuickActionDrawer2, {\n        navigation: this.props.navigation,\n        show: this.state.showDrawer,\n        billName: this.state.selectedBillName,\n        billID: this.state.selectedBillID,\n        billAmount: this.state.selectedBillAmount,\n        billCategoryName: this.state.selectedBillCategoryName,\n        billCategoryIconColor: this.state.selectedBillCategoryIconColor,\n        billCategoryIconName: this.state.selectedBillCategoryIconName,\n        billIsPaid: this.state.selectedBillIsPaid,\n        billIsPlanned: this.state.selectedBillIsPlanned,\n        billIsForBillTracker: this.state.selectedBillIsForBillTracker,\n        selectedFundingSourceID: this.state.selectedFundingSourceID,\n        selectFundingSourceFunction: this.selectFundingSource,\n        incomeDataFromDB: this.props.currentIncomeFromDB,\n        moveToNextMonth: this.moveToNextMonth,\n        splitEntry: this.splitEntry,\n        markAsUnplanned: this.markAsUnplanned,\n        addToBillTracker: this.addToBillTracker,\n        markAsPaid: this.markAsPaid,\n        goToEditScreen: this.goToEditScreen,\n        fontSize: this.state.fontSize,\n        showCategoriesDrawer: this.showCategoriesDrawer,\n        fetchData: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        }\n      }), React.createElement(CategorySlideOutOverlay, {\n        show: this.state.showCategorySlideOutOverlay,\n        hideDrawerAndOverLayLogic: this.hideDrawerAndOverLayLogic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        }\n      }), React.createElement(SlideOutDrawer, {\n        show: this.state.showCategories,\n        arrayOfCategories: this.state.arrayOfCategories,\n        addCategory: this.addCategory,\n        billID: this.state.selectedBillID,\n        loggedInUserID: this.props.currentUserID,\n        currentCategoryID: this.state.selectedBillCategoryID,\n        currentMonthID: this.state.currentMonthID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        }\n      })));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nexport { MainPage as default };","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Components/mainPage.js"],"names":["React","Component","Container","Button","Content","Form","Item","Input","SummaryWrapper","UnplannedBillWrapper","PlannedBillWrapper","MonthPickerModal","SlideOutDrawer","QuickActionDrawer2","OverLay","CategorySlideOutOverlay","IncomeSummarySwitcher","thisExpression","AppFooter","FontAwesome5","ApiMethods","Font","LoadFonts","AppHeader","Animation","style","require","backgroundImage","wait","timeout","Promise","resolve","setTimeout","MainPage","state","due_date","bill_name","amount_due","currentUnPlannedExpensesFromDB","currentPlannedExpensesFromDB","income_name","income_date","income_amount","currentIncomeFromDB","props","afterSpendingData","monthData","arrayOfCategories","currentMonthID","currentMonth","currentYear","doesCurrentMonthNeedData","currentTotalIncome","afterSpendingIncomeTotal","recentlyAdded","afterSpendingClicked","plannedClicked","refreshing","signedIn","loggedInUsersEmail","loggedInUserID","photoUrl","photoURL","spinnerSize","spinnerOpacity","showSpinner","fontsLoaded","showDrawer","showCategories","showOverLay","showCategorySlideOutOverlay","selectedBillID","selectedBillName","selectedBillAmount","selectedBillDueDate","selectedBillCategoryName","selectedBillCategoryID","selectedFundingSourceID","selectedFundingSourceName","selectedFundingSourceAmount","selectedBillCategoryIconName","selectedBillCategoryIconColor","selectedBillIsPaid","selectedBillIsForBillTracker","selectedBillIsPlanned","whatsBeingEdited","fontSize","componentUpdateSwitch","fetchData","currentUserID","getTotalIncome","setState","onRefresh","then","updateComponent","updateExpensesOnUserRecord","data","res","json","catch","err","console","log","totalIncome","forEach","element","parseFloat","amount","toFixed","totalSpent","amountOfExpense","switcherLogic","switcher","showDrawerAndOverLayLogic","billID","billName","billAmount","categoryName","categoryID","billDueDate","fundingSourceID","fundingSourceName","fundingSourceAmount","billIsPaid","billIsPlanned","forBillTracker","showCategoriesDrawer","getAllCategories","hideDrawerAndOverLayLogic","overLay","selectFundingSource","Alert","alert","text","onPress","editExpense","nModified","navigation","navigate","cancelable","moveToNextMonth","splitEntry","markAsUnplanned","addToBillTracker","markAsPaid","markExpenseAsPaid","deleteExpense","deletedCount","idToDelete","updateAfterSpendingAmount","updateIncomeOnUserRecord","goToEditScreen","dueDate","billFundingSourceID","billCategoryName","billCategoryID","incomeDataFromDB","updateWrapperComponent","showOverLayOnEditScreen","isThisPlanned","addCategory","expenseID","addCategoryToEntry","container","width","height","signOut","zIndex","position","opacity","selectNewMonth","handleIncomeAmount","handleIncomeDate","handleIncomeName","handleAddIncomeFormSubmit","switcherClickedStyle","handleBillAmount","handleDueDate","handleBillName","handleFormSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Alert, View, ScrollView, RefreshControl, ImageBackground } from 'react-native';\nimport { Container, Button, Content, Form, Item, Input} from 'native-base';\nimport SummaryWrapper from './summaryWrapper';\nimport UnplannedBillWrapper from './unplannedBillWrapper';\nimport PlannedBillWrapper from './plannedBillWrapper';\nimport MonthPickerModal from './monthPickerModal';\nimport SlideOutDrawer from './slideOutDrawer';\nimport QuickActionDrawer2 from \"../Components/quickActionDrawer2\";\nimport OverLay from \"../Components/overLay\";\nimport CategorySlideOutOverlay from \"../Components/overlays/categorySlideOutOverlay\";\nimport IncomeSummarySwitcher from \"./incomeSummarySwitcher\";\nimport { thisExpression } from '@babel/types';\nimport AppFooter from './appfooter';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport ApiMethods from '../utilities/apiMethods';\nimport * as Font from 'expo-font';\nimport LoadFonts from '../assets/fonts';\nimport AppHeader from './appheader';\nimport Animation from \"../utilities/animation\";\n\n\nconst style = require(\"../Styles/Styles\");\nconst backgroundImage = require('../Styles/images/app background 3.png');\n\nfunction wait(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n\nexport default class MainPage extends Component {\n  state = {\n    due_date: '',\n    bill_name: '',\n    amount_due: '',\n    currentUnPlannedExpensesFromDB: [],\n    currentPlannedExpensesFromDB: [],\n    income_name: '',\n    income_date: '',\n    income_amount: '',\n    currentIncomeFromDB: this.props.currentIncomeFromDB,\n    afterSpendingData: [],\n    monthData: [],\n    arrayOfCategories: [],\n    currentMonthID: this.props.currentMonthID,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    doesCurrentMonthNeedData: false,\n    currentTotalIncome: 0,\n    afterSpendingIncomeTotal: 0,\n    recentlyAdded: false,\n    afterSpendingClicked: false,\n    plannedClicked: false,\n    refreshing: false,\n    signedIn: false,\n    loggedInUsersEmail: this.props.loggedInUsersEmail,\n    loggedInUserID: \"\",\n    photoUrl: this.props.photoURL,\n    spinnerSize: 20,\n    spinnerOpacity: 1,\n    showSpinner: true,\n    fontsLoaded: false,\n    showDrawer: false,\n    showCategories: false,\n    showOverLay: false,\n    showCategorySlideOutOverlay: false,\n    selectedBillID: \"\",\n    selectedBillName: \"\",\n    selectedBillAmount: \"\",\n    selectedBillDueDate: \"\",\n    selectedBillCategoryName: \"\",\n    selectedBillCategoryID: \"\",\n    selectedFundingSourceID: \"\",\n    selectedFundingSourceName: \"\",\n    selectedFundingSourceAmount: \"\",\n    selectedBillCategoryIconName: \"\",\n    selectedBillCategoryIconColor: \"\",\n    selectedBillIsPaid: \"\",\n    selectedBillIsForBillTracker: \"\",\n    selectedBillIsPlanned: \"\",\n    whatsBeingEdited: \"\",\n    fontSize: 0,\n    componentUpdateSwitch: false,\n  };\n\n  componentDidMount(){\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    this.props.fetchData(this.props.currentUserID, this.props.currentMonthID);\n    this.getTotalIncome();\n    // await this.setState({componentUpdateSwitch: true});\n    this.setState({spinnerSize: 0, spinnerOpacity: 0, showSpinner: false}); \n  }\n\n  onRefresh = () => {\n    this.setState({refreshing: true});\n    wait(200).then(() => {\n      this.setState({spinnerSize: 20, spinnerOpacity: 1, showSpinner: true})\n      this.fetchData();\n      this.setState({refreshing: false});\n    });\n  }\n\n  updateComponent = () => {\n    this.setState({state: this.state});\n  }\n\n  updateExpensesOnUserRecord = () => {\n    ApiMethods.updateExpensesOnUserRecord(this.props.currentUserID).then(data => res.json(data)).catch(err => console.log(err));\n  }\n\n  getTotalIncome = () => {\n    if (!this.state.afterSpendingClicked) {\n      let totalIncome = 0;\n      this.props.currentIncomeFromDB.forEach(element => {\n      totalIncome += parseFloat(element.amount);\n      });\n\n      this.setState({\n        currentTotalIncome: totalIncome.toFixed(2)\n      });\n\n      return totalIncome;\n\n    } else {\n      let totalIncome = 0;\n      let totalSpent = 0;\n      let afterSpendingIncomeTotal = 0;\n      \n      this.props.currentIncomeFromDB.forEach(element => {\n        totalIncome += parseFloat(element.amount);\n        });\n      \n      \n      this.props.currentPlannedExpensesFromDB.forEach(element => {\n      totalSpent += parseFloat(element.amountOfExpense);\n      });\n\n      afterSpendingIncomeTotal = totalIncome - totalSpent;\n\n      this.setState({\n        afterSpendingIncomeTotal: afterSpendingIncomeTotal.toFixed(2) \n      });\n      return afterSpendingIncomeTotal;\n    }\n  }\n\n  switcherLogic = (switcher) => {\n\n    switch (switcher) {\n      case 'after':\n            this.setState({\n              afterSpendingClicked: true\n            },\n            () => {\n              this.getTotalIncome();\n            });\n          break;\n      case 'before':\n          this.setState({\n            afterSpendingClicked: false\n          },\n          () => {\n            this.getTotalIncome();\n          });\n        break;\n      case 'unplanned':\n        this.setState({\n          plannedClicked: true\n        },\n        () => {\n          \n        });\n      break;\n    case 'planned':\n      this.setState({\n        plannedClicked: false\n      },\n      () => {\n        \n      });\n    break;\n\n    default:\n        break;\n    }\n\n\n\n    if (switcher === 'after') {\n      this.setState({\n        afterSpendingClicked: true\n      },\n      () => {\n        this.getTotalIncome();\n      });\n    } else {\n      this.setState({\n        afterSpendingClicked: false\n      },\n      () => {\n        this.getTotalIncome();\n      });\n    }\n  };\n\n  showDrawerAndOverLayLogic = (billID, billName, billAmount, categoryName, categoryID, selectedBillCategoryIconName, selectedBillCategoryIconColor, billDueDate, fundingSourceID, fundingSourceName, fundingSourceAmount, billIsPaid, billIsPlanned, whatsBeingEdited, forBillTracker) => {\n  \n        this.setState({\n          showDrawer: true,\n          showOverLay: true,\n          selectedBillID: billID,\n          selectedBillName: billName,\n          selectedBillAmount: billAmount,\n          selectedBillCategoryName: categoryName,\n          selectedBillCategoryID: categoryID,\n          selectedBillCategoryIconName: selectedBillCategoryIconName,\n          selectedBillCategoryIconColor: selectedBillCategoryIconColor,\n          selectedBillDueDate: billDueDate,\n          selectedFundingSourceID: fundingSourceID,\n          selectedFundingSourceName: fundingSourceName,\n          selectedFundingSourceAmount: fundingSourceAmount,\n          selectedBillIsPaid: billIsPaid,\n          selectedBillIsPlanned: billIsPlanned,\n          whatsBeingEdited: whatsBeingEdited,\n          selectedBillIsForBillTracker: forBillTracker\n         })\n  }\n\n  showCategoriesDrawer = () => {\n    this.getAllCategories();\n    this.setState({\n      showCategories: true,\n      showCategorySlideOutOverlay: true\n    })\n  }\n\n  hideDrawerAndOverLayLogic = (overLay) => {\n    switch (overLay) {\n      case \"quickActionDrawer\":\n        this.setState({\n          showDrawer: false,\n          showOverLay: false,\n        })\n          break;\n      case \"categorySlideOut\":\n        this.setState({\n          showCategories: false,\n          showCategorySlideOutOverlay: false,\n        })\n    }\n  }\n\n  selectFundingSource = (fundingSourceID) => {\n    Alert.alert(\n      'Plan ' + this.state.selectedBillName + ' with this income?',\n      '',\n      [ \n        {text: 'Nevermind', style: 'cancel'},\n        {text: 'Ok', onPress: () => {\n          ApiMethods.editExpense(this.state.selectedBillID, this.state.selectedBillName, this.state.selectedBillDueDate, this.state.selectedBillAmount, true, fundingSourceID, this.props.currentUserID)\n              .then(res => {\n                  if (res.data.nModified === 0) {\n                      alert('Sorry, there was a problem. Please try again');\n                  } else {\n                      this.fetchData();\n                      this.props.navigation.navigate('Budget');\n                  }\n                  })\n              .catch(err => console.log(err));\n        }, \n      },\n        ],\n      {cancelable: false},\n    );\n  \n    }\n    \n    moveToNextMonth = () => {\n      Alert.alert(\n        'Move ' + this.state.selectedBillName + ' to next month?',\n        '',\n        [ \n          {text: 'Nevermind', style: 'cancel'},\n          {text: 'Ok', onPress: () => {\n            ApiMethods.moveToNextMonth(this.state.selectedBillID).then(data => {return data}).catch(err => console.log(err));\n            this.fetchData();\n            this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n          }, \n        },\n          ],\n        {cancelable: false},\n      );\n    }\n\n    splitEntry = () => {\n      Alert.alert(\n        'Split ' + this.state.selectedBillName + '?',\n        'I will create a new entry and evenly divide the amounts between this item and the newly created one?',\n        [ \n          {text: 'Nevermind', style: 'cancel'},\n          {text: 'Ok', onPress: () => {\n            ApiMethods.splitEntry(this.state.selectedBillID).then(data => {return data}).catch(err => console.log(err));\n            this.onRefresh();\n            this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n          }, \n        },\n          ],\n        {cancelable: false},\n      );\n    }\n\n    markAsUnplanned = () => {\n\n      Alert.alert(\n        'Not ready to plan ' + this.state.selectedBillName + '?',\n        'I will move this back to unplanned bills and expenses.',\n        [ \n          {text: 'Nevermind', style: 'cancel'},\n          {text: 'Ok', onPress: () => {\n            ApiMethods.editExpense(this.state.selectedBillID, this.state.selectedBillName, this.state.selectedBillDueDate, this.state.selectedBillAmount, false, \"\", this.props.currentUserID)\n              .then(res => {\n                  if (res.data.nModified === 0) {\n                      alert('Sorry, there was a problem. Please try again');\n                  } else {\n                      this.fetchData();\n                      this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n                  }\n                  })\n              .catch(err => console.log(err));\n          }, \n        },\n          ],\n        {cancelable: false},\n      );\n  \n    }\n\n    addToBillTracker = (billID) => {\n      ApiMethods.addToBillTracker(billID)\n        .then(res => {\n            alert(this.state.selectedBillName + ' has been added to your payment tracker.')\n            this.showDrawerAndOverLayLogic(this.state.selectedBillID, this.state.selectedBillName, this.state.selectedBillAmount, this.state.selectedBillCategoryName, this.state.selectedBillCategoryID, this.state.selectedBillCategoryIconName, this.state.selectedBillCategoryIconColor, this.state.selectedBillDueDate, this.state.selectedFundingSourceID, this.state.selectedFundingSourceName, this.state.selectedFundingSourceAmount, this.state.selectedBillIsPaid, this.state.selectedBillIsPlanned, \"bill\", true);\n          })\n        .catch(err => console.log(err));\n    }\n\n    markAsPaid = () => {\n      switch (this.state.selectedBillIsPaid) {\n        case true:\n          ApiMethods.markExpenseAsPaid(this.state.selectedBillID, false)\n            .then(data => {\n              this.onRefresh();\n              this.fetchData();\n              this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n            })\n            .catch(err => console.log(err));\n            break;\n        case false:\n          ApiMethods.markExpenseAsPaid(this.state.selectedBillID, true)\n            .then(data => {\n              this.onRefresh();\n              this.fetchData();\n              this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n            })\n            .catch(err => console.log(err));\n      }\n    }\n\n    deleteExpense = () => {\n      ApiMethods.deleteExpense(this.state.selectedBillID)\n      .then(res => {\n        if (res.data.deletedCount === 0) {\n          alert('Sorry, ' + idToDelete + ' could not be deleted');\n  \n        } else if (this.state.selectedBillIsPlanned) {\n          alert('You have successfully deleted ' + this.state.selectedBillName);\n  \n            ApiMethods\n              .updateAfterSpendingAmount(this.state.selectedFundingSourceID)\n              .then(data => {\n                ApiMethods\n                  .updateIncomeOnUserRecord(this.props.currentUserID)\n                  .then(data => {\n                    this.fetchData();\n                    })\n                  .catch(err => console.log(err));\n                })\n              .catch(err => console.log(err))\n            \n              this.fetchData();\n              this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n              this.props.navigation.navigate('Budget');\n        } else {\n          alert('You have successfully deleted ' + this.state.selectedBillName);\n          \n          ApiMethods.updateIncomeOnUserRecord(this.props.currentUserID)\n          .then(data => {\n            this.fetchData();\n          })\n          .catch(err => console.log(err));\n  \n          this.fetchData();\n          this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n          this.props.navigation.navigate('Budget');\n        }\n      })\n      .catch(err => console.log(err));\n    }\n\n    goToEditScreen = () => {\n      this.props.navigation.navigate('Edit Entry', {\n        navigation: this.props.navigation,\n        dueDate: this.state.selectedBillDueDate,\n        billName: this.state.selectedBillName,\n        billAmount: this.state.selectedBillAmount,\n        billID: this.state.selectedBillID,\n        billIsPlanned: this.state.selectedBillIsPlanned,\n        billFundingSourceID: this.state.selectedFundingSourceID,\n        billCategoryName: this.state.selectedBillCategoryName,\n        billCategoryID: this.state.selectedBillCategoryID, \n        fundingSourceName: this.state.selectedFundingSourceName,\n        fundingSourceAmount: this.state.selectedFundingSourceAmount,\n        fetchData: this.fetchData,\n        incomeDataFromDB: this.props.currentIncomeFromDB,\n        whatsBeingEdited: this.state.whatsBeingEdited,\n        updateWrapperComponent: this.fetchData,\n        loggedInUserID: this.props.currentUserID,\n        currentMonthID: this.state.currentMonthID,\n        deleteExpense: this.deleteExpense,\n        hideDrawerAndOverLayLogic: this.hideDrawerAndOverLayLogic,\n        showDrawerAndOverLayLogic: this.showDrawerAndOverLayLogic,\n        showDrawer: this.state.showDrawer,\n        showOverLay: this.state.showOverLay,\n        showOverLayOnEditScreen: false,\n        isThisPlanned: this.state.plannedClicked,\n        addCategory: this.addCategory })\n    }\n\n    addCategory = (expenseID, categoryID, categoryName) => {\n            ApiMethods.addCategoryToEntry(expenseID, categoryID, categoryName)\n              .then(data => {\n                this.onRefresh();\n                this.setState({selectedBillCategoryID: categoryID, selectedBillCategoryName: categoryName});\n                this.hideDrawerAndOverLayLogic(\"categorySlideOut\");\n                this.hideDrawerAndOverLayLogic(\"quickActionDrawer\");\n                })\n              .catch(err => console.log(err));\n    }\n\n    getAllCategories = () => {\n      ApiMethods.getAllCategories()\n      .then(arrayOfCategories => {\n        this.setState({arrayOfCategories: arrayOfCategories.data})\n        })\n      .catch(err => console.log(err));\n    }\n\n  render() {\n    return (\n        <Container style={style.container}>\n          <ImageBackground\n            source={backgroundImage}\n            style={{width: '100%', height: '100%'}} >\n          <AppHeader \n            photoURL={this.state.photoUrl}\n            navigation={this.props.navigation}\n            signOut={this.props.signOut} />\n          <ScrollView\n          refreshControl={\n            <RefreshControl \n              refreshing={this.state.refreshing} \n              onRefresh={this.onRefresh} />\n          }\n          >\n            <OverLay \n              show={this.state.showOverLay}\n              showDrawerAndOverLayLogic={this.showDrawerAndOverLayLogic}\n              hideDrawerAndOverLayLogic={this.hideDrawerAndOverLayLogic} />\n            <View style={{zIndex: 0, position: 'relative'}}>\n            {this.state.showSpinner\n              ?\n              <ActivityIndicator style={{ opacity: this.state.spinnerOpacity }} animating={this.state.showSpinner} size={this.state.spinnerSize} color=\"#40DBCE\"/>\n              :\n            <MonthPickerModal \n                monthData={this.props.monthData} \n                currentMonth={this.props.currentMonth}\n                currentYear={this.props.currentYear}\n                currentMonthID={this.props.currentMonthID}\n                selectNewMonth={this.props.selectNewMonth}\n                fetchData={this.fetchData} />\n            }   \n              <SummaryWrapper \n                incomeDataFromDB={!this.state.afterSpendingClicked ? this.props.currentIncomeFromDB : this.state.afterSpendingData}\n                switcherLogic={this.switcherLogic}\n                handleIncomeAmount={this.handleIncomeAmount}\n                handleIncomeDate={this.handleIncomeDate}\n                handleIncomeName={this.handleIncomeName}\n                handleAddIncomeFormSubmit={this.handleAddIncomeFormSubmit}\n                currentTotalIncome={!this.state.afterSpendingClicked ? this.state.currentTotalIncome : this.state.afterSpendingIncomeTotal}\n                switcherClicked={this.state.afterSpendingClicked}\n                switcherStyle={this.state.switcherClickedStyle}\n                incomeDataFromDB={this.props.currentIncomeFromDB}\n                loggedInUserID={this.props.currentUserID}\n                fetchData={this.fetchData}\n                spinnerSize={this.state.spinnerSize}\n                spinnerOpacity={this.state.spinnerOpacity}\n                showSpinner={this.state.showSpinner}\n                monthData={this.props.monthData}\n                currentMonth={this.state.currentMonth}\n                currentMonthID={this.state.currentMonthID}\n                navigation={this.props.navigation} />\n              <UnplannedBillWrapper\n                expenseDataFromDB={!this.state.plannedClicked ? this.props.currentUnPlannedExpensesFromDB : this.props.currentPlannedExpensesFromDB}\n                incomeDataFromDB={this.props.currentIncomeFromDB}\n                switcherLogic={this.switcherLogic}\n                handleBillAmount={this.handleBillAmount}\n                handleDueDate={this.handleDueDate}\n                plannedClicked={this.state.plannedClicked}\n                updateComponent={this.updateComponent}\n                updateExpensesOnUserRecord={this.updateExpensesOnUserRecord}\n                handleBillName={this.handleBillName} \n                handleFormSubmit={this.handleFormSubmit}\n                loggedInUserID={this.props.currentUserID}\n                fetchData={this.fetchData}\n                refresh={this.onRefresh}\n                spinnerSize={this.state.spinnerSize}\n                spinnerOpacity={this.state.spinnerOpacity}\n                showSpinner={this.state.showSpinner}\n                currentMonth={this.state.currentMonth}\n                currentMonthID={this.state.currentMonthID}\n                navigation={this.props.navigation}\n                showDrawerAndOverLayLogic={this.showDrawerAndOverLayLogic}\n                hide={this.hideDrawerAndOverLayLogic}\n                componentUpdateSwitch={this.state.componentUpdateSwitch} />\n            </View>\n          </ScrollView>\n          <QuickActionDrawer2 \n            navigation={this.props.navigation}\n            show={this.state.showDrawer} \n            billName={this.state.selectedBillName} \n            billID={this.state.selectedBillID} \n            billAmount={this.state.selectedBillAmount}\n            billCategoryName={this.state.selectedBillCategoryName} \n            billCategoryIconColor={this.state.selectedBillCategoryIconColor}\n            billCategoryIconName={this.state.selectedBillCategoryIconName} \n            billIsPaid={this.state.selectedBillIsPaid}\n            billIsPlanned={this.state.selectedBillIsPlanned}\n            billIsForBillTracker={this.state.selectedBillIsForBillTracker}\n            selectedFundingSourceID={this.state.selectedFundingSourceID}\n            selectFundingSourceFunction={this.selectFundingSource} \n            incomeDataFromDB={this.props.currentIncomeFromDB} \n            moveToNextMonth={this.moveToNextMonth} \n            splitEntry={this.splitEntry}\n            markAsUnplanned={this.markAsUnplanned}\n            addToBillTracker={this.addToBillTracker}\n            markAsPaid={this.markAsPaid}\n            goToEditScreen={this.goToEditScreen}\n            fontSize={this.state.fontSize} \n            showCategoriesDrawer={this.showCategoriesDrawer}\n            fetchData={this.fetchData}\n            />\n          <CategorySlideOutOverlay \n            show={this.state.showCategorySlideOutOverlay}\n            hideDrawerAndOverLayLogic={this.hideDrawerAndOverLayLogic} />\n          <SlideOutDrawer \n            show={this.state.showCategories}\n            arrayOfCategories={this.state.arrayOfCategories} \n            addCategory={this.addCategory} \n            billID={this.state.selectedBillID}\n            loggedInUserID={this.props.currentUserID}\n            currentCategoryID={this.state.selectedBillCategoryID} \n            currentMonthID={this.state.currentMonthID} \n            />\n\n          </ImageBackground>\n        </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}