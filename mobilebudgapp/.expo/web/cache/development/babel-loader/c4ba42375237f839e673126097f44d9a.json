{"ast":null,"code":"import axios from \"axios\";\nvar dev = \"http://localhost:3001/\";\nvar prod = \"https://gentle-beyond-46108.herokuapp.com/\";\nvar URL = prod;\n\nvar getIncome = function getIncome() {\n  return axios.get(URL + \"api/allIncome\");\n};\n\nvar getIncomeByUserID = function getIncomeByUserID(userID, monthID) {\n  return axios.get(URL + \"api/allIncome/\" + userID + \"/\" + monthID);\n};\n\nvar getExpenses = function getExpenses() {\n  return axios.get(URL + \"api/allExpenses\");\n};\n\nvar getBillTrackerItems = function getBillTrackerItems(userID, monthID) {\n  return axios.get(URL + \"api/allBillTrackerItems/\" + userID + \"/\" + monthID);\n};\n\nvar getMonthData = function getMonthData() {\n  return axios.get(URL + \"api/monthData\");\n};\n\nvar getCurrentMonth = function getCurrentMonth() {\n  return axios.get(URL + \"api/getCurrentMonth\");\n};\n\nvar getAllPlannedExpenses = function getAllPlannedExpenses(userID, monthID) {\n  return axios.get(URL + \"api/allPlannedExpenses/\" + userID + \"/\" + monthID);\n};\n\nvar getAllCategories = function getAllCategories() {\n  return axios.get(URL + \"api/allCategories\");\n};\n\nvar fetchData = function fetchData(userID) {\n  return axios.get(URL + \"api/fetchData/\" + userID);\n};\n\nvar getAllUnPlannedExpenses = function getAllUnPlannedExpenses(userID, monthID) {\n  return axios.get(URL + \"api/allUnPlannedExpenses/\" + userID + \"/\" + monthID);\n};\n\nvar getExpenseByID = function getExpenseByID(expenseID) {\n  return axios.get(URL + \"api/getExpenseByID/\" + expenseID, {\n    params: {\n      expenseID: expenseID\n    }\n  });\n};\n\nvar getIncomeByID = function getIncomeByID(incomeID) {\n  return axios.get(URL + \"api/getIncomeByID/\" + incomeID, {\n    params: {\n      incomeID: incomeID\n    }\n  });\n};\n\nvar getUserByID = function getUserByID(userID) {\n  return axios.get(URL + \"api/getUserByID/\" + userID, {\n    params: {\n      userID: userID\n    }\n  });\n};\n\nvar getUserByEmail = function getUserByEmail(email) {\n  return axios.get(URL + \"api/getUserByEmail/\" + email, {\n    params: {\n      email: email\n    }\n  });\n};\n\nvar getAfterSpendingAmount = function getAfterSpendingAmount(incomeID) {\n  return axios.get(URL + \"api/getAfterSpendingAmount/\" + incomeID, {\n    params: {\n      incomeID: incomeID\n    }\n  });\n};\n\nvar getCategoryTotalByMonth = function getCategoryTotalByMonth(userID, monthID, categoryID) {\n  return axios.get(URL + \"api/calculateCategoryTotalsPerMonth/\" + userID + \"/\" + monthID + \"/\" + categoryID, {\n    params: {\n      userID: userID,\n      monthID: monthID,\n      categoryID: categoryID\n    }\n  });\n};\n\nvar addIncome = function addIncome(name, date, amount, userID, monthID) {\n  return axios.post(URL + 'api/addingIncome', {\n    name: name,\n    date: date,\n    amount: amount,\n    userID: userID,\n    monthID: monthID\n  });\n};\n\nvar addExpense = function addExpense(name, date, amount, userID, monthID, forBillTracker) {\n  return axios.post(URL + \"api/addingExpense\", {\n    nameOfExpense: name,\n    dateOfExpense: date,\n    amountOfExpense: amount,\n    userID: userID,\n    monthID: monthID,\n    forBillTracker: forBillTracker\n  });\n};\n\nvar copyPreviousMonthData = function copyPreviousMonthData(previousMonthID, userID, targetMonthID) {\n  return axios.post(URL + \"api/copyPreviousMonth\", {\n    previousMonthID: previousMonthID,\n    userID: userID,\n    targetMonthID: targetMonthID\n  });\n};\n\nvar addUser = function addUser(email, profilePic, lastName, firstName) {\n  return axios.post(URL + \"api/addingUser\", {\n    email: email,\n    profilePic: profilePic,\n    lastName: lastName,\n    firstName: firstName\n  });\n};\n\nvar getPlaidAccessToken = function getPlaidAccessToken(public_token) {\n  return axios.post(URL + \"api/getAccessToken\", {\n    public_token: public_token\n  });\n};\n\nvar deleteExpense = function deleteExpense(id) {\n  return axios.delete(URL + \"api/deleteExpense\", {\n    data: {\n      _id: id\n    }\n  });\n};\n\nvar deleteIncome = function deleteIncome(id) {\n  return axios.delete(URL + \"api/deleteIncome\", {\n    data: {\n      _id: id\n    }\n  });\n};\n\nvar editExpense = function editExpense(id, name, date, amount, isPlanned, fundingSource, loggedInUserID) {\n  return axios.put(URL + \"api/updateExpense\", {\n    data: {\n      _id: id,\n      nameOfExpense: name,\n      dateOfExpense: date,\n      amountOfExpense: amount,\n      isPlanned: isPlanned,\n      fundingSource: fundingSource,\n      loggedInUserID: loggedInUserID\n    }\n  });\n};\n\nvar editIncome = function editIncome(id, name, date, amount) {\n  return axios.put(URL + \"api/updateIncome\", {\n    data: {\n      _id: id,\n      name: name,\n      date: date,\n      amount: amount\n    }\n  });\n};\n\nvar addToBillTracker = function addToBillTracker(id) {\n  return axios.put(URL + \"api/addToBillTracker\", {\n    data: {\n      _id: id\n    }\n  });\n};\n\nvar markExpenseAsPaid = function markExpenseAsPaid(id, bool) {\n  return axios.put(URL + \"api/markExpenseAsPaid\", {\n    data: {\n      _id: id,\n      isPaid: bool\n    }\n  });\n};\n\nvar addCategoryToEntry = function addCategoryToEntry(expenseID, categoryID, categoryName) {\n  return axios.put(URL + \"api/addCategoryToEntryByCategoryID\", {\n    data: {\n      _id: expenseID,\n      categoryID: categoryID,\n      categoryName: categoryName\n    }\n  });\n};\n\nvar updateAfterSpendingAmount = function updateAfterSpendingAmount(incomeID) {\n  return axios.put(URL + \"api/updateAfterSpendingAmount/\" + incomeID, {\n    params: {\n      incomeID: incomeID\n    }\n  });\n};\n\nvar updateIncomeOnUserRecord = function updateIncomeOnUserRecord(userID) {\n  return axios.put(URL + \"api/updateIncomeOnUserRecord/\" + userID, {\n    params: {\n      userID: userID\n    }\n  });\n};\n\nvar updateExpensesOnUserRecord = function updateExpensesOnUserRecord(userID) {\n  return axios.put(URL + \"api/updateExpensesOnUserRecord/\" + userID, {\n    params: {\n      userID: userID\n    }\n  });\n};\n\nvar splitEntry = function splitEntry(billID) {\n  return axios.put(URL + \"api/splitEntry/\" + billID, {\n    params: {\n      billID: billID\n    }\n  });\n};\n\nvar moveToNextMonth = function moveToNextMonth(billID) {\n  return axios.put(URL + \"api/moveToNextMonth/\" + billID, {\n    params: {\n      billID: billID\n    }\n  });\n};\n\nvar removeFromBillTracker = function removeFromBillTracker(billID) {\n  return axios.put(URL + \"api/removeFromBillTracker/\" + billID, {\n    params: {\n      billID: billID\n    }\n  });\n};\n\nexport default {\n  getIncome: getIncome,\n  getIncomeByUserID: getIncomeByUserID,\n  getExpenses: getExpenses,\n  getMonthData: getMonthData,\n  getCurrentMonth: getCurrentMonth,\n  fetchData: fetchData,\n  getAllPlannedExpenses: getAllPlannedExpenses,\n  getAllUnPlannedExpenses: getAllUnPlannedExpenses,\n  getAllCategories: getAllCategories,\n  getExpenseByID: getExpenseByID,\n  getIncomeByID: getIncomeByID,\n  getUserByID: getUserByID,\n  getUserByEmail: getUserByEmail,\n  getAfterSpendingAmount: getAfterSpendingAmount,\n  getPlaidAccessToken: getPlaidAccessToken,\n  getCategoryTotalByMonth: getCategoryTotalByMonth,\n  getBillTrackerItems: getBillTrackerItems,\n  updateAfterSpendingAmount: updateAfterSpendingAmount,\n  updateExpensesOnUserRecord: updateExpensesOnUserRecord,\n  updateExpensesOnUserRecord: updateExpensesOnUserRecord,\n  updateIncomeOnUserRecord: updateIncomeOnUserRecord,\n  addIncome: addIncome,\n  addExpense: addExpense,\n  addUser: addUser,\n  addCategoryToEntry: addCategoryToEntry,\n  deleteExpense: deleteExpense,\n  deleteIncome: deleteIncome,\n  editExpense: editExpense,\n  editIncome: editIncome,\n  addToBillTracker: addToBillTracker,\n  markExpenseAsPaid: markExpenseAsPaid,\n  copyPreviousMonthData: copyPreviousMonthData,\n  splitEntry: splitEntry,\n  moveToNextMonth: moveToNextMonth,\n  removeFromBillTracker: removeFromBillTracker\n};","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/utilities/apiMethods.js"],"names":["axios","dev","prod","URL","getIncome","get","getIncomeByUserID","userID","monthID","getExpenses","getBillTrackerItems","getMonthData","getCurrentMonth","getAllPlannedExpenses","getAllCategories","fetchData","getAllUnPlannedExpenses","getExpenseByID","expenseID","params","getIncomeByID","incomeID","getUserByID","getUserByEmail","email","getAfterSpendingAmount","getCategoryTotalByMonth","categoryID","addIncome","name","date","amount","post","addExpense","forBillTracker","nameOfExpense","dateOfExpense","amountOfExpense","copyPreviousMonthData","previousMonthID","targetMonthID","addUser","profilePic","lastName","firstName","getPlaidAccessToken","public_token","deleteExpense","id","delete","data","_id","deleteIncome","editExpense","isPlanned","fundingSource","loggedInUserID","put","editIncome","addToBillTracker","markExpenseAsPaid","bool","isPaid","addCategoryToEntry","categoryName","updateAfterSpendingAmount","updateIncomeOnUserRecord","updateExpensesOnUserRecord","splitEntry","billID","moveToNextMonth","removeFromBillTracker"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nconst dev = \"http://localhost:3001/\";\r\nconst prod = \"https://gentle-beyond-46108.herokuapp.com/\";\r\nconst URL = prod;\r\n\r\n// exp://192.168.1.23:19000\r\n\r\n/////////////Get Methods////////////////////\r\n\r\nlet getIncome = () => {\r\n    return axios.get(URL + \"api/allIncome\");\r\n}\r\n\r\nlet getIncomeByUserID = (userID, monthID) => {\r\n    return axios.get(URL + \"api/allIncome/\" + userID + \"/\" + monthID);\r\n}\r\n\r\nlet getExpenses = () => {\r\n    return axios.get(URL + \"api/allExpenses\");\r\n}\r\n\r\nlet getBillTrackerItems = (userID, monthID) => {\r\n    return axios.get(URL + \"api/allBillTrackerItems/\" + userID + \"/\" + monthID);\r\n}\r\n\r\nlet getMonthData = () => {\r\n    return axios.get(URL + \"api/monthData\");\r\n}\r\n\r\nlet getCurrentMonth = () => {\r\n    return axios.get(URL + \"api/getCurrentMonth\");\r\n}\r\n\r\nlet getAllPlannedExpenses = (userID, monthID) => {\r\n    return axios.get(URL + \"api/allPlannedExpenses/\" + userID  + \"/\" + monthID);\r\n}\r\n\r\nlet getAllCategories = () => {\r\n    return axios.get(URL + \"api/allCategories\");\r\n}\r\n\r\nlet fetchData = (userID) => {\r\n    return axios.get(URL + \"api/fetchData/\" + userID);\r\n}\r\n\r\nlet getAllUnPlannedExpenses = (userID, monthID) => {\r\n    return axios.get(URL + \"api/allUnPlannedExpenses/\" + userID  + \"/\" + monthID);\r\n}\r\n\r\nlet getExpenseByID = (expenseID) => {\r\n    return axios.get(URL + \"api/getExpenseByID/\" + expenseID, {\r\n        params: {expenseID: expenseID}\r\n    });\r\n}\r\n\r\nlet getIncomeByID = (incomeID) => {\r\n    return axios.get(URL + \"api/getIncomeByID/\" + incomeID, {\r\n      params: {incomeID: incomeID}\r\n    });\r\n}\r\n\r\nlet getUserByID = (userID) => {\r\n    return axios.get(URL + \"api/getUserByID/\" + userID, {\r\n      params: {userID: userID}\r\n    });\r\n}\r\n\r\nlet getUserByEmail = (email) => {\r\n    return axios.get(URL + \"api/getUserByEmail/\" + email, {\r\n      params: {email: email}\r\n    });\r\n}\r\n\r\nlet getAfterSpendingAmount = (incomeID) => {\r\n    return axios.get(URL + \"api/getAfterSpendingAmount/\" + incomeID, {\r\n      params: {incomeID: incomeID}\r\n    });\r\n}\r\n\r\nlet getCategoryTotalByMonth = (userID, monthID, categoryID) => {\r\n    return axios.get(URL + \"api/calculateCategoryTotalsPerMonth/\" + userID + \"/\" + monthID + \"/\" + categoryID, {\r\n      params:  { userID: userID,\r\n                monthID: monthID,\r\n                categoryID: categoryID}\r\n    });\r\n}\r\n\r\n\r\n\r\n/////////////Post Methods////////////////////\r\n\r\nlet addIncome = (name, date, amount, userID, monthID) => {\r\n    return axios.post(URL + 'api/addingIncome', {\r\n        name: name,\r\n        date: date,\r\n        amount: amount,\r\n        userID: userID,\r\n        monthID: monthID\r\n    });\r\n}\r\n\r\nlet addExpense = (name, date, amount, userID, monthID, forBillTracker) => {\r\n    return axios.post(URL + \"api/addingExpense\", {\r\n        nameOfExpense: name,\r\n        dateOfExpense: date,\r\n        amountOfExpense: amount,\r\n        userID: userID,\r\n        monthID: monthID,\r\n        forBillTracker: forBillTracker\r\n    });\r\n}\r\n\r\nlet copyPreviousMonthData = (previousMonthID, userID, targetMonthID) => {\r\n    return axios.post(URL + \"api/copyPreviousMonth\", {\r\n        previousMonthID: previousMonthID,\r\n        userID: userID,\r\n        targetMonthID: targetMonthID\r\n    });\r\n}\r\n\r\nlet addUser = (email, profilePic, lastName, firstName) => {\r\n    return axios.post(URL + \"api/addingUser\", {\r\n        email: email,\r\n        profilePic: profilePic,\r\n        lastName: lastName,\r\n        firstName: firstName\r\n    });\r\n}\r\n\r\nlet getPlaidAccessToken = (public_token) => {\r\n    return axios.post(URL + \"api/getAccessToken\", {\r\n        public_token: public_token\r\n    });\r\n}\r\n\r\n/////////////Delete Methods////////////////////\r\n\r\nlet deleteExpense = (id) => {\r\n    return axios.delete(URL + \"api/deleteExpense\", {\r\n       data: {_id: id,}\r\n    });\r\n}\r\n\r\nlet deleteIncome = (id) => {\r\n    return axios.delete(URL + \"api/deleteIncome\", {\r\n       data: {_id: id,}\r\n    });\r\n}\r\n\r\n/////////////Update Methods////////////////////\r\n\r\nlet editExpense = (id, name, date, amount, isPlanned, fundingSource, loggedInUserID) => {\r\n    return axios.put(URL + \"api/updateExpense\", {\r\n       data: {_id: id,\r\n        nameOfExpense: name,\r\n        dateOfExpense: date,\r\n        amountOfExpense: amount,\r\n        isPlanned: isPlanned,\r\n        fundingSource: fundingSource,\r\n        loggedInUserID: loggedInUserID}\r\n    });\r\n}\r\n\r\nlet editIncome = (id, name, date, amount) => {\r\n    return axios.put(URL + \"api/updateIncome\", {\r\n       data: {_id: id,\r\n        name: name,\r\n        date: date,\r\n        amount: amount\r\n        }\r\n    });\r\n}\r\n\r\nlet addToBillTracker = (id) => {\r\n    return axios.put(URL + \"api/addToBillTracker\", {\r\n        data: {_id: id}\r\n     });\r\n}\r\n\r\nlet markExpenseAsPaid = (id, bool) => {\r\n    return axios.put(URL + \"api/markExpenseAsPaid\", {\r\n        data: {_id: id, isPaid: bool}\r\n     });\r\n}\r\n\r\nlet addCategoryToEntry = (expenseID, categoryID, categoryName) => {\r\n    return axios.put(URL + \"api/addCategoryToEntryByCategoryID\", {\r\n        data: {_id: expenseID, categoryID: categoryID, categoryName: categoryName}\r\n     });\r\n}\r\n\r\nlet updateAfterSpendingAmount = (incomeID) => {\r\n    return axios.put(URL + \"api/updateAfterSpendingAmount/\" + incomeID , {\r\n      params: {incomeID: incomeID}\r\n    });\r\n}\r\n\r\nlet updateIncomeOnUserRecord = (userID) => {\r\n    return axios.put(URL + \"api/updateIncomeOnUserRecord/\" + userID, {\r\n        params: {userID: userID}\r\n      });\r\n}\r\n\r\nlet updateExpensesOnUserRecord = (userID) => {\r\n    return axios.put(URL + \"api/updateExpensesOnUserRecord/\" + userID, {\r\n        params: {userID: userID}\r\n      });\r\n}\r\n\r\nlet splitEntry = (billID) => {\r\n    return axios.put(URL + \"api/splitEntry/\" + billID, {\r\n        params: {billID: billID}\r\n      });\r\n}\r\n\r\nlet moveToNextMonth = (billID) => {\r\n    return axios.put(URL + \"api/moveToNextMonth/\" + billID, {\r\n        params: {billID: billID}\r\n      });\r\n}\r\n\r\nlet removeFromBillTracker = (billID) => {\r\n    return axios.put(URL + \"api/removeFromBillTracker/\" + billID, {\r\n        params: {billID: billID}\r\n      });\r\n}\r\n\r\n\r\nexport default {\r\n    getIncome: getIncome,\r\n    getIncomeByUserID: getIncomeByUserID,\r\n    getExpenses: getExpenses,\r\n    getMonthData: getMonthData,\r\n    getCurrentMonth: getCurrentMonth,\r\n    fetchData: fetchData,\r\n    getAllPlannedExpenses: getAllPlannedExpenses,\r\n    getAllUnPlannedExpenses: getAllUnPlannedExpenses,\r\n    getAllCategories: getAllCategories,\r\n    getExpenseByID: getExpenseByID,\r\n    getIncomeByID: getIncomeByID,\r\n    getUserByID: getUserByID,\r\n    getUserByEmail: getUserByEmail,\r\n    getAfterSpendingAmount: getAfterSpendingAmount,\r\n    getPlaidAccessToken: getPlaidAccessToken,\r\n    getCategoryTotalByMonth: getCategoryTotalByMonth,\r\n    getBillTrackerItems: getBillTrackerItems,\r\n    updateAfterSpendingAmount: updateAfterSpendingAmount,\r\n    updateExpensesOnUserRecord, updateExpensesOnUserRecord,\r\n    updateIncomeOnUserRecord: updateIncomeOnUserRecord,\r\n    addIncome: addIncome,\r\n    addExpense: addExpense,\r\n    addUser: addUser,\r\n    addCategoryToEntry: addCategoryToEntry,\r\n    deleteExpense: deleteExpense,\r\n    deleteIncome: deleteIncome,\r\n    editExpense: editExpense,\r\n    editIncome: editIncome,\r\n    addToBillTracker: addToBillTracker,\r\n    markExpenseAsPaid: markExpenseAsPaid,\r\n    copyPreviousMonthData: copyPreviousMonthData,\r\n    splitEntry: splitEntry,\r\n    moveToNextMonth: moveToNextMonth,\r\n    removeFromBillTracker: removeFromBillTracker,\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}