{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Screens\\\\createNewBudgetScreen.js\";\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport LoginScreenStyles from \"../Styles/loginSreenStyles\";\nimport style from \"../Styles/Styles\";\nimport ApiMethods from \"../utilities/apiMethods\";\nimport BudgetScreen from \"./budgetScreen\";\nimport BackGroundImage from \"../Styles/images/whiteWall.png\";\n\nvar CreateNewBudgetScreen = function (_Component) {\n  _inherits(CreateNewBudgetScreen, _Component);\n\n  function CreateNewBudgetScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateNewBudgetScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateNewBudgetScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.copyPreviousMonth = function () {\n      ApiMethods.copyPreviousMonthData(_this.props.route.params.previousMonthID, _this.props.route.params.userID, _this.props.route.params.targetMonthID).then(function (data) {\n        return data;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.props.route.params.fetchData();\n\n      _this.props.navigation.navigate('Budget');\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateNewBudgetScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, React.createElement(ImageBackground, {\n        source: BackGroundImage,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#40DBCE\",\n          fontSize: 20,\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, \"Hey there, ready to start planning\"), React.createElement(Text, {\n        style: {\n          color: \"#40DBCE\",\n          fontSize: 20,\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, this.props.route.params.targetMonthName + \"'s budget?\"), React.createElement(Text, {\n        style: {\n          color: \"#40DBCE\",\n          fontSize: 15,\n          marginTop: 20,\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, \"Get a head start by copying this month's budget\"), React.createElement(Text, {\n        style: {\n          color: \"#40DBCE\",\n          fontSize: 15,\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, \"or you can start fresh.\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.copyPreviousMonth();\n        },\n        style: style.button2_cta_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#4A0784',\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, \" \", 'Copy ' + this.props.route.params.previousMonthName + \"'s plan\", \" \")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Budget');\n        },\n        style: style.button2_light_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#4A0784',\n          fontFamily: 'Laila-SemiBold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, \" Start fresh \")))));\n    }\n  }]);\n\n  return CreateNewBudgetScreen;\n}(Component);\n\nexport default CreateNewBudgetScreen;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Screens/createNewBudgetScreen.js"],"names":["React","Component","Container","Header","Content","Card","CardItem","Text","Body","LoginScreenStyles","style","ApiMethods","BudgetScreen","BackGroundImage","CreateNewBudgetScreen","state","copyPreviousMonth","copyPreviousMonthData","props","route","params","previousMonthID","userID","targetMonthID","then","data","catch","err","console","log","fetchData","navigation","navigate","width","height","flex","justifyContent","alignItems","margin","color","fontSize","fontFamily","targetMonthName","marginTop","button2_cta_style","previousMonthName","button2_light_style"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ActivityIndicator, View, Button, ImageBackground, Alert, TouchableOpacity } from 'react-native';\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport LoginScreenStyles from \"../Styles/loginSreenStyles\";\nimport style from \"../Styles/Styles\";\nimport ApiMethods from '../utilities/apiMethods';\nimport BudgetScreen from \"./budgetScreen\";\nimport BackGroundImage from \"../Styles/images/whiteWall.png\";\n\nclass CreateNewBudgetScreen extends Component {\n\n  state = {\n    \n  }\n\ncopyPreviousMonth = () => {\n  \n  ApiMethods.copyPreviousMonthData(this.props.route.params.previousMonthID, this.props.route.params.userID, this.props.route.params.targetMonthID)\n    .then(data => {return data})\n    .catch(err => console.log(err))\n    this.props.route.params.fetchData();\n    this.props.navigation.navigate('Budget');\n\n    //{email: this.state.email, currentMonth: this.state.currentMonth, currentMonthID: this.state.currentMonthID}\n}\n render() {\n\n   const {navigation} = this.props;\n\n    return (\n      <Container>\n          <ImageBackground\n            source={BackGroundImage}\n            style={{width: '100%', height: '100%'}} > \n          <View style={{flex: 1, justifyContent: 'center', alignItems: 'center', margin: 25}}>\n            <Text style={{color: \"#40DBCE\", fontSize: 20, fontFamily: 'Laila-SemiBold'}}>\n              Hey there, ready to start planning\n            </Text>\n            <Text style={{color: \"#40DBCE\", fontSize: 20, fontFamily: 'Laila-SemiBold'}}>\n              {this.props.route.params.targetMonthName + \"'s budget?\"}\n            </Text>\n            <Text style={{color: \"#40DBCE\", fontSize: 15, marginTop: 20, fontFamily: 'Laila-SemiBold'}}>\n              Get a head start by copying this month's budget \n            </Text>\n            <Text style={{color: \"#40DBCE\", fontSize: 15, fontFamily: 'Laila-SemiBold'}}>\n              or you can start fresh.\n            </Text>\n          </View>\n          <View style={{flex: 1, justifyContent: 'center'}}>\n          <TouchableOpacity\n            onPress={() => {this.copyPreviousMonth()}}\n            style={style.button2_cta_style}\n            >\n            <Text style={{color: '#4A0784', fontFamily: 'Laila-SemiBold'}}> {'Copy ' + this.props.route.params.previousMonthName +  \"'s plan\"} </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {this.props.navigation.navigate('Budget')}}\n            style={style.button2_light_style}\n            >\n            <Text style={{color: '#4A0784', fontFamily: 'Laila-SemiBold'}}> Start fresh </Text>\n          </TouchableOpacity>\n          </View>  \n          </ImageBackground>\n      </Container>\n      \n    );\n  }\n}\n\n  export default CreateNewBudgetScreen;"]},"metadata":{},"sourceType":"module"}