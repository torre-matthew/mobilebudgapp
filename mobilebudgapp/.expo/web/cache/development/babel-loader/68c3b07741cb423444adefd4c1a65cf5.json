{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\bootcamp\\\\mobilebudgapp\\\\mobilebudgapp\\\\Screens\\\\billTrackerScreen.js\";\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport LoginScreenStyles from \"../Styles/loginSreenStyles\";\nimport style from \"../Styles/Styles\";\nimport ApiMethods from \"../utilities/apiMethods\";\nimport MainScreen from \"./budgetScreen\";\nimport BackGroundImage from \"../Styles/images/app background 3.png\";\nimport AppFooter from \"../Components/appfooter\";\nimport AppHeader from \"../Components/appheader\";\nimport MonthlyBillWrapper from \"../Components/PayBills/monthlyBillWrapper\";\n\nvar BillTrackerScreen = function (_Component) {\n  _inherits(BillTrackerScreen, _Component);\n\n  function BillTrackerScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BillTrackerScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BillTrackerScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      billTrackerItemsFromDB: [],\n      loggedInUserID: \"\",\n      month: _this.props.route.params.currentMonth,\n      monthID: _this.props.route.params.currentMonthID\n    };\n\n    _this.selectNewMonth = function (month, monthID) {\n      _this.setState({\n        month: month,\n        monthID: monthID\n      }, function () {\n        _this.getBillTrackerItems();\n      });\n    };\n\n    _this.updateUnplannedBillWrapperComponent = function () {\n      _this.componentDidMount();\n    };\n\n    _this.getBillTrackerItems = function (loggedInUserID, monthID) {\n      ApiMethods.getBillTrackerItems(_this.state.loggedInUserID, _this.state.monthID).then(function (billTrackerItems) {\n        _this.setState({\n          billTrackerItemsFromDB: billTrackerItems.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getLoggedInUserIdByEmail = function _callee(email) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ApiMethods.getUserByEmail(email).then(function (data) {\n                return _this.setState({\n                  loggedInUserID: data.data[0]._id\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.getBillTrackerItems(_this.state.loggedInUserID, _this.state.monthID));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.removeFromBillTracker = function (billID) {\n      ApiMethods.removeFromBillTracker(billID).then(function (data) {\n        _this.getBillTrackerItems(_this.state.loggedInUserID, _this.state.monthID);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BillTrackerScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLoggedInUserIdByEmail(this.props.route.params.loggedInUsersEmail);\n      this.setState({\n        month: this.props.route.params.currentMonth,\n        monthID: this.props.route.params.currentMonthID\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }, React.createElement(ImageBackground, {\n        source: BackGroundImage,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(AppHeader, {\n        photoURL: this.state.photoUrl,\n        navigation: this.props.navigation,\n        signOut: this.props.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }), React.createElement(MonthlyBillWrapper, {\n        billTrackerItemsFromDB: this.state.billTrackerItemsFromDB,\n        currentMonth: this.state.month,\n        currentYear: this.props.route.params.currentYear,\n        selectNewMonth: this.selectNewMonth,\n        removeFromBillTracker: this.removeFromBillTracker,\n        getLoggedInUserIdByEmail: this.getLoggedInUserIdByEmail,\n        loggedInUsersEmail: this.props.route.params.loggedInUsersEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }), React.createElement(AppFooter, {\n        navigation: this.props.navigation,\n        screen: \"bills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      })));\n    }\n  }]);\n\n  return BillTrackerScreen;\n}(Component);\n\nexport default BillTrackerScreen;","map":{"version":3,"sources":["C:/Users/torre/Documents/bootcamp/mobilebudgapp/mobilebudgapp/Screens/billTrackerScreen.js"],"names":["React","Component","Container","Header","Content","Card","CardItem","Text","Body","TouchableOpacity","LoginScreenStyles","style","ApiMethods","MainScreen","BackGroundImage","AppFooter","AppHeader","MonthlyBillWrapper","BillTrackerScreen","state","billTrackerItemsFromDB","loggedInUserID","month","props","route","params","currentMonth","monthID","currentMonthID","selectNewMonth","setState","getBillTrackerItems","updateUnplannedBillWrapperComponent","componentDidMount","then","billTrackerItems","data","catch","err","console","log","getLoggedInUserIdByEmail","email","getUserByEmail","_id","removeFromBillTracker","billID","loggedInUsersEmail","navigation","width","height","photoUrl","signOut","currentYear"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ActivityIndicator, View, Button, ImageBackground, Alert, Image } from 'react-native';\nimport { Container, Header, Content, Card, CardItem, Text, Body } from \"native-base\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport LoginScreenStyles from \"../Styles/loginSreenStyles\";\nimport style from \"../Styles/Styles\";\nimport ApiMethods from '../utilities/apiMethods';\nimport MainScreen from \"./budgetScreen\";\nimport BackGroundImage from \"../Styles/images/app background 3.png\";\nimport AppFooter from '../Components/appfooter';\nimport AppHeader from '../Components/appheader';\nimport MonthlyBillWrapper from '../Components/PayBills/monthlyBillWrapper';\n\nclass BillTrackerScreen extends Component {\n\n  state = {\n    billTrackerItemsFromDB: [],\n    loggedInUserID: \"\",\n    month: this.props.route.params.currentMonth,\n    monthID: this.props.route.params.currentMonthID\n  }\n\n  componentDidMount() {\n    this.getLoggedInUserIdByEmail(this.props.route.params.loggedInUsersEmail);\n    this.setState({\n      month: this.props.route.params.currentMonth,\n      monthID: this.props.route.params.currentMonthID  \n    });\n  }\n\n  selectNewMonth = (month, monthID) => {\n    this.setState({\n      month: month,\n      monthID: monthID\n    }, () => {this.getBillTrackerItems();})\n  }\n\n  updateUnplannedBillWrapperComponent = () => {\n    this.componentDidMount();\n  }\n\n  getBillTrackerItems = (loggedInUserID, monthID) => {\n    ApiMethods\n      .getBillTrackerItems(this.state.loggedInUserID, this.state.monthID)\n      .then(billTrackerItems => {\n          this.setState({\n            billTrackerItemsFromDB: billTrackerItems.data\n          })\n        })\n      .catch(err => console.log(err))\n  }\n\n  getLoggedInUserIdByEmail = async (email) => {\n    await ApiMethods.getUserByEmail(email)\n          .then(data => \n                this.setState({\n                  loggedInUserID: data.data[0]._id \n                }))\n          .catch(err => console.log(err))\n\n    await this.getBillTrackerItems(this.state.loggedInUserID, this.state.monthID);\n  }\n\n  removeFromBillTracker = (billID) => {\n    ApiMethods.removeFromBillTracker(billID)\n              .then(data => {\n                this.getBillTrackerItems(this.state.loggedInUserID, this.state.monthID)\n              })\n              .catch(err => console.log(err))\n  }\n\n render() {\n\n   const {navigation} = this.props;\n\n    return (\n      <Container>\n        <ImageBackground\n            source={BackGroundImage}\n            style={{width: '100%', height: '100%'}} > \n        <AppHeader \n            photoURL={this.state.photoUrl}\n            navigation={this.props.navigation}\n            signOut={this.props.signOut} />\n        <MonthlyBillWrapper \n          billTrackerItemsFromDB={this.state.billTrackerItemsFromDB}\n          currentMonth={this.state.month}\n          currentYear={this.props.route.params.currentYear}\n          selectNewMonth={this.selectNewMonth}\n          removeFromBillTracker={this.removeFromBillTracker}\n          getLoggedInUserIdByEmail={this.getLoggedInUserIdByEmail}\n          loggedInUsersEmail={this.props.route.params.loggedInUsersEmail}\n        />\n        <AppFooter \n              navigation={this.props.navigation} \n              screen={\"bills\"} />\n        </ImageBackground> \n      </Container>\n      \n    );\n  }\n}\n\n  export default BillTrackerScreen;"]},"metadata":{},"sourceType":"module"}